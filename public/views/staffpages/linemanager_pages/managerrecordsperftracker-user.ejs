<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personal Information & Career Progression</title>
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/hr_pages.css">
    <link rel="stylesheet" href="/css/recordsandperformancetracker.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<style>
    h2 {
    margin-bottom: 20px; /* Adjust the value as needed for spacing */
}
.employee-info {
    margin-top: 20px; /* Adjust the value as needed for spacing */
}


</style>

<body>
    <%- include('../../partials/linemanager_partials') %>

    <!-- Main content area -->
    <div class="main-content">
        <div class="container">
            <div class="columns">
                <!-- Column 1: Personal Information -->
                <div class="column" id="personal-info">
                    <div class="section">
                        <img src="/images/profile.png" alt="Profile Picture" class="profile-pic">
                        <h2>Personal Information</h2>
                        <p><strong>Name:</strong> <span id="nameDisplay"><%= user.firstName %> <%= user.lastName %></span></p>
                        <p><strong>Phone:</strong> <span id="phoneDisplay"><%= user.phoneNumber %></span></p>
                        <p><strong>Date of Birth:</strong> <span id="dobDisplay"><%= user.dateOfBirth %></span></p>
                        <p><strong>Emergency Contact:</strong> <span id="emergencyDisplay"><%= user.emergencyContactName %> (<%= user.emergencyContactNumber %>)</span></p>
                    </div>
                    <div class="section">
                        <h2>Employment Details</h2>
                        <p><strong>Job Title:</strong> <span id="jobTitleDisplay"><%= user.jobTitle %></span></p>
                        <p><strong>Department:</strong> <span id="departmentDisplay"><%= user.departmentName %></span></p>
                        <p><strong>Employment Type:</strong> <span id="employmentTypeDisplay"><%= user.employmentType %></span></p>
                        <p><strong>Hire Date:</strong> <span id="hireDateDisplay"><%= user.hireDate %></span></p>
                    </div>
                </div>
        
                <!-- Column 2: Career Progression -->
                <div class="column" id="career-progression">
                    <div class="section">
                        <h2>Career Progression</h2>
                        <div class="milestone-container">
                            <div class="milestone">
                                <div class="milestone-label">
                                    <h4>Milestone 1</h4>
                                    <p>Joined Company</p>
                                </div>
                            </div>
                            <div class="milestone">
                                <div class="milestone-label">
                                    <h4>Milestone 2</h4>
                                    <p>Promoted to Junior Developer</p>
                                </div>
                            </div>
                            <div class="milestone">
                                <div class="milestone-label">
                                    <h4>Milestone 3</h4>
                                    <p>Completed Major Project</p>
                                </div>
                            </div>
                            <div class="milestone">
                                <div class="milestone-label">
                                    <h4>Milestone 4</h4>
                                    <p>Promoted to Developer</p>
                                </div>
                            </div>
                            <div class="milestone">
                                <div class="milestone-label">
                                    <h4>Milestone 5</h4>
                                    <p>Achieved Team Lead Role</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        
                <!-- Column 3: Degree, Experiences, and Uploaded Certifications -->
                <div class="column" id="degree-experience-certifications">
                    <div class="section">
                        <h2>Degree</h2>
                        <p>Bachelor of Science in Computer Science</p>
                        <p>University of Technology - Graduated 2012</p>
                    </div>
        
                    <div class="section">
                        <h2>Experiences</h2>
                        <p>Software Engineer at XYZ Corp (2015 - Present)</p>
                        <p>Junior Developer at ABC Inc. (2012 - 2015)</p>
                    </div>
        
                    <div class="section">
                        <h2>Uploaded Certifications</h2>
                        <p>Certified Scrum Master (CSM)</p>
                        <p>Oracle Certified Java Programmer</p>
                        <p>Microsoft Certified: Azure Developer Associate</p>
                    </div>
                </div>
            </div>
        
            <!-- Below the three columns -->
            <section id="attendance-logs">
                <h2>Attendance Logs</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Last Name</th>
                            <th>First Name</th>
                            <th>Date</th>
                            <th>Department</th>
                            <th>Job Position</th>
                            <th>Time In</th>
                            <th>Time Out</th>
                            <th>Active Working Hours</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Doe</td>
                            <td>John</td>
                            <td>2024-10-30</td>
                            <td>Finance</td>
                            <td>Financial Analyst</td>
                            <td>08:00 AM</td>
                            <td>05:00 PM</td>
                            <td>8 Hours</td>
                        </tr>
                    </tbody>
                </table>
            </section>
        
            <section id="objective-skill-progress">
                <h2>Objective-based Skill Quarterly Progress Overview</h2>
                <table>
                    <thead>
                        <tr>
                            <th>KRA/Objectives</th>
                            <th>KPI</th>
                            <th>Target</th>
                            <th>UOM</th>
                            <th>Assigned Weight</th>
                            <th>Current Score</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Improve Financial Reporting</td>
                            <td>Accuracy Rate</td>
                            <td>95%</td>
                            <td>%</td>
                            <td>20%</td>
                            <td>90%</td>
                        </tr>
                    </tbody>
                </table>
            </section>
        
            <section id="skill-gap-analysis">
                <h2>Job Required Skill and Gap Analysis Quarterly Overview</h2>
                <h3>Hard Skills</h3>
                <p>Analysis, Reporting, Forecasting</p>
                <h3>Soft Skills</h3>
                <p>Communication, Teamwork, Adaptability</p>
            </section>
            <section class="stepper">
                <h2>Objective and Performance Review Tracker</h2>
                <div class="stepper-container">
                    <div class="step" onclick="handleObjectiveClick()">
                        <div class="step-icon"><i class="fa fa-bullseye"></i></div>
                        <div class="step-label">
                            Objective Setting
                            <% if (viewState.viewOnlyStatus['objectivesettings']) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                    <div class="step">
                        <div class="step-icon"><i class="fa fa-users"></i></div>
                        <div class="step-label">
                            [1/4] 360 Degree Feedback
                            <% if (viewState.viewOnlyStatus['360degreefeedback_1']) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                    <div class="step">
                        <div class="step-icon"><i class="fa fa-users"></i></div>
                        <div class="step-label">
                            [2/4] 360 Degree Feedback
                            <% if (viewState.viewOnlyStatus['360degreefeedback_2']) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                    <div class="step">
                        <div class="step-icon"><i class="fa fa-clipboard-check"></i></div>
                        <div class="step-label">
                            Mid-Year IDP
                            <% if (viewState.viewOnlyStatus.midyearidp) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                    <div class="step">
                        <div class="step-icon"><i class="fa fa-users"></i></div>
                        <div class="step-label">
                            [3/4] 360 Degree Feedback
                            <% if (viewState.viewOnlyStatus['360degreefeedback_3']) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                    <div class="step">
                        <div class="step-icon"><i class="fa fa-users"></i></div>
                        <div class="step-label">
                            [4/4] 360 Degree Feedback
                            <% if (viewState.viewOnlyStatus['360degreefeedback_4']) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                    <div class="step">
                        <div class="step-icon"><i class="fa fa-clipboard-check"></i></div>
                        <div class="step-label">
                            Final-Year IDP
                            <% if (viewState.viewOnlyStatus.finalyearidp) { %>
                                (View-Only)
                            <% } else { %>
                                (Editable)
                            <% } %>
                        </div>
                    </div>
            
                </div>
            </section>
            <% if (!viewState.viewOnlyStatus['objectivesettings']) { %>
                <!-- Show the Objective Setting Form Section -->
                <section id="objective-skill-progress-form" class="fade-out">
                    <h2>Objective-based Skill Quarterly Progress Overview</h2>
                    <p class="employee-info"><strong>Employee Name:</strong> <%= user.lastName %>, <%= user.firstName %></p>
                    <p><strong>Position:</strong> <%= user.jobTitle %></p>
                    <p><strong>Company:</strong> Prime Infrastructure</p>
                    <p><strong>Department:</strong> <%= user.departmentName %></p>
                    <p><strong>Performance Period:</strong> <span id="performanceDate"><%= new Date().toLocaleDateString('en-US') %></span></p>
            
                    <input type="hidden" name="userId" value="<%= user.userId %>">
                    <input type="hidden" id="jobId" name="jobId" value="<%= user.jobId %>">
                    <input type="hidden" id="departmentId" name="departmentId" value="<%= user.departmentId %>">
                    <table>
                        <thead>
                            <tr>
                                <th>KRA/Objectives</th>
                                <th>KPI</th>
                                <th>Target</th>
                                <th>UOM</th>
                                <th>Assigned Weight</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="progress-table-body">
                            <tr>
                                <td><input type="text" placeholder="Enter Objective" name="objectiveDescrpt" required></td>
                                <td><input type="text" placeholder="Enter KPI" name="objectiveKPI" required></td>
                                <td><input type="text" placeholder="Enter Target" name="objectiveTarget" required></td>
                                <td><input type="text" placeholder="Enter UOM" name="objectiveUOM" required></td>
                                <td><input type="number" class="weight-input" oninput="updateTotalWeight()" placeholder="Enter Weight (%)" name="objectiveAssignedWeight" min="0" max="100" required></td>
                                <td><button type="button" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        </tbody>
                    </table>
                    <button id="addRowBtn" type="button" onclick="addRow()">Add Row</button>
                    <p><strong>Total Assigned Weight:</strong> <input id="totalWeight" type="number" value="0" readonly>%</p>
            
                    <label>
                        <input type="checkbox" id="confirmationCheckbox" required>
                        I confirm that the objective weights have been accurately consolidated and reviewed.
                    </label>
            
                    <div id="submitButtonContainer">
                        <button id="saveButton" type="button" onclick="saveObjectives()">Save</button>
                    </div>
                </section>
            <% } else { %>
                <!-- View-Only Page for Submitted Data -->
                <section id="view-only-page" class="fade-out">
                    <h2>View Objectives and Performance Review Data</h2>
                    <p><strong>Submission Date:</strong> <span id="submissionDate"><%= new Date().toLocaleDateString('en-US') %></span></p>
                    <div class="step-icon"><i class="fa fa-check-circle"></i></div>
                    <p id="objectivesData">
                        <strong>Submitted Objectives:</strong>
                        <ul>
                            <% if (submittedObjectives && submittedObjectives.length > 0) { %>
                                <% submittedObjectives.forEach(obj => { %>
                                    <li>
                                        <strong>KRA/Objectives:</strong> <%= obj.objectiveDescrpt %>, 
                                        <strong>KPI:</strong> <%= obj.objectiveKPI %>, 
                                        <strong>Target:</strong> <%= obj.objectiveTarget %>, 
                                        <strong>UOM:</strong> <%= obj.objectiveUOM %>, 
                                        <strong>Assigned Weight:</strong> <%= obj.objectiveAssignedWeight %>%
                                    </li>
                                <% }); %>
                            <% } else { %>
                                <li>No objectives submitted yet.</li>
                     bn       <% } %>
                        </ul>
                    </p>
                    <button id="prepareFeedbackBtn" style="float: right; margin-top: 20px;">Proceed to Prepare 360 Degree Feedback</button>
                </section>
            <% } %>
            
            
            <script>
                // Placeholder for viewState object
                const viewState = {
                    viewOnlyStatus: {
                        objectivesettings: false // Change this value based on your logic
                    }
                };
            
                // Function to handle objective click
                function handleObjectiveClick() {
                    console.log("Objective clicked. View only status:", viewState.viewOnlyStatus.objectivesettings);
                    if (!viewState.viewOnlyStatus.objectivesettings) {
                        showObjectiveForm();
                    }
                }
            
                // Function to show the objective form and fade out other sections
                function showObjectiveForm() {
                    console.log("Showing objective form.");
                    const objectiveForm = document.getElementById("objective-skill-progress-form");
                    objectiveForm.style.display = "block"; // Ensure the form is visible
            
                    // Hide other sections
                    const otherSections = document.querySelectorAll('#attendance-logs, #objective-skill-progress, #skill-gap-analysis, #view-only-page');
                    otherSections.forEach(section => {
                        section.style.display = "none"; // Hide other sections
                    });
            
                    // Fade out all other steps
                    document.querySelectorAll('.step').forEach(step => {
                        step.classList.add('faded');
                    });
            
                    // Show the specific step for the objective form
                    const currentStep = document.querySelector('.step');
                    if (currentStep) {
                        currentStep.classList.remove('faded');
                    }
                }
            
                // Function to add a new row in the progress table
                function addRow() {
                    console.log("Adding a new row to the progress table.");
                    const newRow = document.createElement('tr');
                    newRow.innerHTML = `
                        <td><input type="text" placeholder="Enter Objective" name="objectiveDescrpt" required></td>
                        <td><input type="text" placeholder="Enter KPI" name="objectiveKPI" required></td>
                        <td><input type="text" placeholder="Enter Target" name="objectiveTarget" required></td>
                        <td><input type="text" placeholder="Enter UOM" name="objectiveUOM" required></td>
                        <td><input type="number" class="weight-input" oninput="updateTotalWeight()" placeholder="Enter Weight (%)" name="objectiveAssignedWeight" min="0" max="100" required></td>
                        <td><button type="button" onclick="removeRow(this)">Remove</button></td>
                    `;
                    document.getElementById('progress-table-body').appendChild(newRow);
                    updateTotalWeight(); // Update the total weight after adding a new row
                }
            
                // Function to remove a row from the progress table
                function removeRow(button) {
                    console.log("Removing a row from the progress table.");
                    const row = button.parentElement.parentElement; // Get the row to remove
                    row.remove(); // Remove the row from the table
                    updateTotalWeight(); // Update total weight after removing a row
                }
            
                // Function to update the total weight
                function updateTotalWeight() {
                    const weightInputs = document.querySelectorAll('.weight-input');
                    let totalWeight = 0;
            
                    weightInputs.forEach(input => {
                        const weight = parseFloat(input.value) || 0; // Get weight, default to 0 if empty
                        totalWeight += weight; // Accumulate total weight
                    });
            
                    // Update the total weight display
                    document.getElementById("totalWeight").value = totalWeight;
                    console.log("Total weight updated:", totalWeight);
                }
            
                async function saveObjectives() {
    const userId = document.querySelector('input[name="userId"]').value;
    const jobId = document.getElementById("jobId").value;
    const performancePeriod = document.getElementById("performanceDate").textContent;

    console.log("User  ID:", userId);
    console.log("Job ID:", jobId);
    console.log("Department ID:", departmentId);
    console.log("Performance Period:", performancePeriod);

    // Check if any required IDs are missing
    if (!userId || !jobId || !departmentId) {
        console.error("One or more required IDs are missing.");
        alert("Please ensure all fields are filled out correctly before saving.");
        return;
    }

    const objectives = [];
    const rows = document.querySelectorAll("#progress-table-body tr");

    // Check if confirmation is checked
    const confirmationChecked = document.getElementById("confirmationCheckbox").checked;
    if (!confirmationChecked) {
        alert("Please confirm that you have reviewed the objectives before saving.");
        return;
    }

    let totalWeight = 0; // Initialize total weight variable

    rows.forEach(row => {
        const descriptionInput = row.querySelector('input[name="objectiveDescrpt"]');
        const kpiInput = row.querySelector('input[name="objectiveKPI"]');
        const targetInput = row.querySelector('input[name="objectiveTarget"]');
        const uomInput = row.querySelector('input[name="objectiveUOM"]');
        const weightInput = row.querySelector('input[name="objectiveAssignedWeight"]');

        if (descriptionInput && kpiInput && targetInput && uomInput && weightInput) {
            const weight = parseFloat(weightInput.value); // Parse weight as a float
            totalWeight += weight; // Accumulate total weight

            const objective = {
                description: descriptionInput.value,
                kpi: kpiInput.value,
                target: targetInput.value,
                uom: uomInput.value,
                weight: weight,
            };
            objectives.push(objective);
        }
    });

    console.log("Objectives to save:", objectives);

    // Check if total weight equals 100%
    if (totalWeight !== 100) {
        alert("Total assigned weight must be 100% to save.");
        return; // Return early if weight does not equal 100%
    }

    if (objectives.length > 0) {
        try {
            const response = await fetch(`/linemanager/records-performance-tracker/objectivesetting/${userId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    jobId,
                    departmentId,
                    performancePeriod,
                    objectives,
                    totalWeight
                })
            });

            console.log("Response from server:", response);

            const result = await response.json();
            console.log("Result from server:", result);

            if (result.success) {
                alert(result.message); // Handle success
                displaySubmittedObjectives(objectives); // Display the submitted objectives

                // Redirect to the view-only page after successful save
                window.location.href = `/linemanager/records-performance-tracker/${userId}`; // Adjust this URL as necessary
            } else {
                alert("Failed to save objectives: " + result.message);
            }
        } catch (error) {
            console.error("Error saving objectives:", error);
            alert("An error occurred while saving objectives.");
        }
    } else {
        alert("No objectives to save.");
    }
}
            
                // Function to display submitted objectives in the view-only section
                function displaySubmittedObjectives(objectives) {
                    console.log("Displaying submitted objectives.");
                    const objectivesData = document.getElementById("objectivesData");
                    objectivesData.innerHTML = ""; // Clear previous data
            
                    objectives.forEach(obj => {
                        objectivesData.innerHTML += `<strong>Objective:</strong> ${obj.description}, <strong>KPI:</strong> ${obj.kpi}, <strong>Target:</strong> ${obj.target}, <strong>UOM:</strong> ${obj.uom}, <strong>Weight:</strong> ${obj.weight}%<br>`;
                    });
            
                    // Set submission date to current date
                    document.getElementById("submissionDate").textContent = new Date().toLocaleDateString('en-US');
                }
            
            </script>
</body>
</html>
