<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Training & Development</title>
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/linemanagertrainingdevelopment.css">
</head>
<body>
   <%- include('../../partials/linemanager_partials') %>
    
<div class="main-content">
    <!-- Header Section -->
    <div class="header-section">
        <h1>Training & Development Tracker</h1>
        <p>Manage and review employee training requests awaiting your endorsement</p>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-number"><%= statistics.totalPendingEndorsements %></div>
            <p class="stat-label">Pending Endorsements</p>
        </div>
        <div class="stat-card">
            <div class="stat-number">‚Ç±<%= statistics.costSummary.totalCost.toLocaleString() %></div>
            <p class="stat-label">Total Training Cost</p>
        </div>
        <div class="stat-card">
            <div class="stat-number">‚Ç±<%= statistics.costSummary.averageCost %></div>
            <p class="stat-label">Average Cost per Training</p>
        </div>
        <div class="stat-card">
            <div class="stat-number"><%= statistics.costSummary.onlineTrainings %></div>
            <p class="stat-label">Online Trainings</p>
        </div>
    </div>

    <!-- Training Records Table -->
    <div class="content-section">
        <div class="section-header">
            <h2>Training Requests for Endorsement</h2>
        </div>
        
        <% if (trainingRecords && trainingRecords.length > 0) { %>
            <div class="table-container">
                <table class="training-table">
                    <thead>
                        <tr>
                            <th>Employee</th>
                            <th>Email</th>
                            <th>Training Details</th>
                            <th>Duration</th>
                            <th>Cost</th>
                            <th>Type</th>
                            <th>Requested Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% trainingRecords.forEach(function(record) { %>
                            <tr>
                                <td>
                                    <% if (record.staffaccounts) { %>
                                        <strong>
                                            <%= record.staffaccounts.firstName || 'No First Name' %> 
                                            <%= record.staffaccounts.lastName || 'No Last Name' %>
                                        </strong>
                                    <% } else { %>
                                        <strong style="color: red;">No Staff Data Found (UserID: <%= record.userId %>)</strong>
                                    <% } %>
                                    <% if (record.jobpositions?.jobTitle) { %>
                                        <br><small style="color: #6c757d;"><%= record.jobpositions.jobTitle %></small>
                                    <% } %>
                                </td>
                                <td><%= record.useraccounts?.userEmail || 'No Email' %></td>
                                <td>
                                    <strong><%= record.trainingName %></strong>
                                    <% if (record.trainingDesc) { %>
                                        <br><small style="color: #6c757d;"><%= record.trainingDesc.substring(0, 100) %>...</small>
                                    <% } %>
                                    <% if (record.address && !record.isOnlineArrangement) { %>
                                        <br><small style="color: #6c757d;">üìç <%= record.address %>, <%= record.country %></small>
                                    <% } %>
                                </td>
                                <td class="duration-cell">
                                    <%= record.totalDuration %> hours
                                    <% if (record.setStartDate && record.setEndDate) { %>
                                        <br><small><%= new Date(record.setStartDate).toLocaleDateString() %> - <%= new Date(record.setEndDate).toLocaleDateString() %></small>
                                    <% } %>
                                </td>
                                <td class="cost-cell">‚Ç±<%= parseFloat(record.cost || 0).toLocaleString() %></td>
                                <td>
                                    <% if (record.isOnlineArrangement) { %>
                                        <span class="online-badge">Online</span>
                                    <% } else { %>
                                        <span class="onsite-badge">On-site</span>
                                    <% } %>
                                </td>
                                <td><%= new Date(record.dateRequested).toLocaleDateString() %></td>
                                <td>
                                    <span class="status-badge <%= record.status === 'For HR Approval' ? 'status-hr' : 
                                         record.status === 'Cancelled' ? 'status-cancelled' : 
                                         'status-pending' %>">
                                        <%= record.status %>
                                    </span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn btn-approve" onclick="approveTraining('<%= record.trainingRecordId %>')">
                                            Endorse to HR
                                        </button>
                                        <button class="btn btn-reject" onclick="rejectTraining('<%= record.trainingRecordId %>')">
                                            Return for Revision
                                        </button>
                                        <button class="btn btn-view" onclick="viewTrainingDetails('<%= record.trainingRecordId %>')">
                                            View Details
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        <% } else { %>
            <div class="no-records">
                <i>üìö</i>
                <h3>No Training Requests Pending</h3>
                <p>There are currently no training requests awaiting your endorsement.</p>
            </div>
        <% } %>
    </div>
</div>

<!-- Training Details Modal -->
<div id="trainingDetailsModal" class="modal">
  <div class="modal-content">
    <span class="close-modal">&times;</span>
    <h2>Training Request Details</h2>
    <div id="modalContent">
      <!-- Content will be loaded here dynamically -->
    </div>
  </div>
</div>

    <script>
        // Toggle active class for sidebar links
        document.querySelectorAll('.sidebar ul li a').forEach(link => {
            link.addEventListener('click', function() {
                document.querySelectorAll('.sidebar ul li a').forEach(link => link.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Toggle collapsible content
        document.querySelectorAll('.collapsible-header').forEach(header => {
            header.addEventListener('click', function() {
                var content = this.nextElementSibling;
                if (content.style.display === 'block') {
                    content.style.display = 'none';
                } else {
                    // Hide all other collapsible contents
                    document.querySelectorAll('.collapsible-content').forEach(item => {
                        if (item !== content) {
                            item.style.display = 'none';
                        }
                    });
                    content.style.display = 'block';
                }
            });
        });

        // Training approval functions
        function approveTraining(trainingRecordId) {
            if (confirm('Are you sure you want to endorse this training request to HR?')) {
                fetch('/api/training/endorse', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        trainingRecordId: trainingRecordId,
                        decision: 'endorsed',
                        status: 'For HR Approval'
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Training request endorsed to HR successfully!');
                        location.reload();
                    } else {
                        alert('Error endorsing training request: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while endorsing the training request.');
                });
            }
        }

        function rejectTraining(trainingRecordId) {
            const remarks = prompt('Please provide reason for cancellation:');
            if (remarks !== null) {
                fetch('/api/training/reject', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        trainingRecordId: trainingRecordId,
                        decision: 'rejected',
                        status: 'Cancelled',
                        remarks: remarks
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Training request has been cancelled successfully!');
                        location.reload();
                    } else {
                        alert('Error cancelling training request: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while cancelling the training request.');
                });
            }
        }

        // Modal functionality
        const modal = document.getElementById("trainingDetailsModal");
        const modalContent = document.getElementById("modalContent");

        // Close modal when clicking X
        document.querySelector(".close-modal").onclick = function() {
            modal.style.display = "none";
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        // View training details
        async function viewTrainingDetails(trainingRecordId) {
            try {
                // Show loading state
                modalContent.innerHTML = '<p>Loading details...</p>';
                modal.style.display = "block";
                
                // Fetch training details
                const response = await fetch(`/api/training/details/${trainingRecordId}`);
                const data = await response.json();
                
                if (data.error) throw new Error(data.error);
                
                // Format and display the details
                const training = data.data;
                modalContent.innerHTML = `
                    <div class="detail-row">
                        <div class="detail-label">Employee:</div>
                        <div>${training.staffaccounts?.firstName || ''} ${training.staffaccounts?.lastName || ''}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Email:</div>
                        <div>${training.useraccounts?.userEmail || 'No email'}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Position:</div>
                        <div>${training.jobpositions?.jobTitle || 'No position'}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Training:</div>
                        <div><strong>${training.trainingName}</strong></div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Description:</div>
                        <div>${training.trainingDesc || 'No description provided'}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Dates:</div>
                        <div>
                            ${new Date(training.setStartDate).toLocaleDateString()} - 
                            ${new Date(training.setEndDate).toLocaleDateString()}
                            (${training.totalDuration} hours)
                        </div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Cost:</div>
                        <div>‚Ç±${parseFloat(training.cost || 0).toLocaleString()}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Type:</div>
                        <div>${training.isOnlineArrangement ? 'Online' : 'On-site'}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Location:</div>
                        <div>${training.address || 'N/A'} ${training.country ? ', ' + training.country : ''}</div>
                    </div>
                    
                    <div class="detail-row">
                        <div class="detail-label">Status:</div>
                        <div class="status-badge ${training.status === 'For HR Approval' ? 'status-hr' : 
                                              training.status === 'Cancelled' ? 'status-cancelled' : 
                                              'status-pending'}">
                            ${training.status}
                        </div>
                    </div>
                    
                    ${training.lmDecisionRemarks ? `
                    <div class="detail-row">
                        <div class="detail-label">Manager Remarks:</div>
                        <div>${training.lmDecisionRemarks}</div>
                    </div>
                    ` : ''}
                    
                    <div class="detail-row">
                        <div class="detail-label">Request Date:</div>
                        <div>${new Date(training.dateRequested).toLocaleDateString()}</div>
                    </div>
                `;
                
            } catch (error) {
                console.error('Error loading details:', error);
                modalContent.innerHTML = `
                    <p style="color: red;">Error loading training details:</p>
                    <p>${error.message}</p>
                `;
            }
        }

        // Auto-refresh every 5 minutes to check for new requests
        setInterval(function() {
            location.reload();
        }, 300000); // 5 minutes
    </script>
</body>
</html>