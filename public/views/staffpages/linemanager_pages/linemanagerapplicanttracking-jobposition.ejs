<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Applicant Tracker - Job Position</title>
    <link rel="stylesheet" href="/css/sidebar.css"> <!-- Linking Sidebar CSS -->
    <link rel="stylesheet" href="/css/linemanager.css"> <!-- Linking Main Content CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"> <!-- FontAwesome for icons -->
    <style>
        /* Adjust layout to avoid sidebar overlap */
        .main-content {
            margin-left: 350px;
            padding: 20px;
            width: calc(100% - 350px);
            background-color: #FFFFFF;
        }

        .header-section {
            margin-bottom: 10px;
            margin-left: 5px;
            font-size: 24px;
            text-align: left;
        }

        .subheader {
            font-size: 20px;
            margin-left: 5px;
            margin-bottom: 20px;
            color: #555;
        }

        .tracking-section {
            background-color: #FFFFFF;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin: 10px 5px;
        }

        .search-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .search-bar {
            padding: 8px;
            width: 370px;
            font-size: 16px;
            border: 1px solid #ddd;
        }

        .search-button {
            margin-left: 10px;
            background-color: #124A5C;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            font-size: 16px;
        }

        .right-section {
            display: flex;
            gap: 10px;
        }

        .right-section button {
            padding: 10px 15px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            background-color:#124A5C;
            color: white;
            transition: background-color 0.3s ease;
        }

        .right-section button:hover {
            background-color: #B4E3E3       ;
            color: white;
        }

        .tracking-table {
        width: 100%;
        border-collapse: collapse;
    }

    .tracking-table th, 
    .tracking-table td {
        padding: 10px 10px;
        border: 1px solid #ddd;
    }

    /* Left-align the table headers and cells */
    .tracking-table th,
    .tracking-table td {
        text-align: left;
    }

    /* Set fixed, smaller widths for the first four columns */
    .tracking-table th:nth-child(1),
    .tracking-table td:nth-child(1) {
        width: 10%; /* Adjust the width as needed */
    }

    .tracking-table th:nth-child(2),
    .tracking-table td:nth-child(2) {
        width: 20%; /* Adjust the width as needed */
    }

    .tracking-table th:nth-child(3),
    .tracking-table td:nth-child(3) {
        width: 15%; /* Adjust the width as needed */
    }


    /* Right-align buttons, left-align the text in the Applicant Status column */
    .tracking-table td:last-child {
        display: flex;
        justify-content: space-between; /* Ensures buttons are on the right side */
        align-items: center;
    }

    /* Align text to the left in the same column */
    .tracking-table td:last-child span {
        text-align: left; /* Ensure text is left-aligned */
        flex-grow: 1; /* Allow text to take available space */
    }

    /* General table styling */
    .tracking-table th,
    .tracking-table td {
        text-align: left;
    }

    /* Adjusting layout for action buttons in the last column */
    .tracking-table td:last-child button {
        margin-left: 10px; /* Space between buttons */
    }
    .tracking-table tr:hover {
        background-color: #f1f1f1;
    }
        /* Style for the job title container */
        .job-title-container {
            display: flex;
            align-items: center;
        }

        /* Style for status circle */
        .status-circle {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px; /* Space between circle and job title */
        }

        /* Green status circle */
        .status-circle.green {
            background-color: green;
        }

        /* Gray status circle */
        .status-circle.gray {
            background-color: gray;
        }

           /* Button styling for status actions */
    .status-button {
        background-color: white; /* White background */
        color: black; /* Black text */
        border: 1px solid #124A5C; /* Border color matching the hover */
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 14px;
        cursor: pointer;
        text-align: center;
        width: auto;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .status-button:hover {
        background-color: #124A5C; /* Hover background color */
        color: white; /* Hover text color */
    }

/* For consistency with other button styling */
.btn-review, .btn-evaluation, .btn-onboarding, .btn-reviewP3 {
    background-color: white;
    color: black;
    border: 1px solid #124A5C;
    padding: 10px 20px;
    cursor: pointer;
    border-radius: 5px;
    font-size: 14px;
    transition: background-color 0.3s ease, color 0.3s ease;
    width: 150px; /* Set a consistent width */
    text-align: center; /* Ensures text aligns properly within the button */
}

.btn-review:hover, .btn-evaluation:hover, .btn-onboarding:hover, .btn-reviewP3:hover {
    background-color: #124A5C;
    color: white;
}
.set-interview-button {
            padding: 10px 20px;
            background-color: #124A5C;
            color: white;
            border: none;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
            display: block;
            width: 20%;
            text-align: center;
        }
        .set-interview-button:hover {
            background-color: #218838;
        }


        /* MODAL CSS*/

        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1000; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto; /* Centered */
            padding: 20px;
            border: 1px solid #888;
            border-radius: 8px; /* Rounded corners */
            width: 80%; /* Could be more or less, depending on screen size */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow effect */
        }

        .modal-header, .modal-body, .modal-footer {
            text-align: center; /* Center text */
        }

        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close-button:hover,
        .close-button:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .modal-buttons {
            display: flex;
            justify-content: center; /* Center buttons */
            margin-top: 20px;
        }

        .modal-buttons button {
            padding: 10px 20px;
            margin: 0 10px; /* Space between buttons */
            border: none;
            border-radius: 5px; /* Rounded corners */
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .modal-buttons button#backButton {
            background-color: rgba(18, 74, 92, 0.5); /* 50% opacity */
            color: white;
        }

        .modal-buttons button#confirmButton {
            background-color: #124A5C; 
            color: white;
        }

        .modal-buttons button:hover {
            opacity: 0.8; /* Slightly transparent on hover */
        }
        .divider {
    height: 2px; /* Height of the divider */
    background-color: #124A5C; /* Color of the divider */
    margin: 10px 0; /* Space above and below the divider */
}

.scores-table {
        width: 100%; /* Full width */
        border-collapse: collapse; /* Merge borders */
        margin-top: 10px; /* Space above the table */
    }

    .scores-table th, .scores-table td {
        border: 1px solid #ddd; /* Border for table cells */
        padding: 8px; /* Padding inside cells */
        text-align: left; /* Align text to the left */
    }

    .scores-table th {
        background-color: #124A5C; /* Header background color */
        color: white; /* Header text color */
    }

    .scores-table tr:nth-child(even) {
        background-color: #f2f2f2; /* Zebra striping for even rows */
    }

    .scores-table tr:hover {
        background-color: #ddd; /* Highlight row on hover */
    }
    .computation-verdict {
    margin: 15px 0; /* Space above and below */
    font-size: 18px; /* Font size */
    font-weight: bold; /* Bold text */
    color: #124A5C; /* Color to match your theme */
    text-align: left; /* Center the text */
}

.applicant-details h3 {
    font-size: 24px;
}

/* Styling for the finalize review button */
.set-finalize-review-button {
    position: absolute;
    bottom: 10px;
    right: 10px; /* Right-aligned to the container */
    background-color: #124A5C;
    color: white;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    border-radius: 5px;
    width: auto; /* Let the button width be determined by its content */
    min-width: 200px; /* Minimum width to ensure the text fits */
    white-space: nowrap; /* Prevent the text from wrapping */
    text-align: center; /* Center the text inside the button */
    font-size: 16px;
}

.set-finalize-review-button:hover {
    background-color: #B4E3E3;
    color: white;
}

/* Ensure the finalize button stays at the bottom */
.finalize-container {
    position: fixed;
    bottom: 20px;  /* Adjust position as necessary */
    right: 20px;   /* Align to the right */
    display: none; /* Hidden by default */
}

/* Enhanced styling for the assessment form panel */
.assessment-form-panel {
    background-color: #f9f9f9;
    border-radius: 8px;
    padding: 20px;
    margin-top: 15px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.assessment-form-panel h4 {
    color: #124A5C;
    font-size: 20px;
    margin-bottom: 15px;
    text-align: center;
}

.form-row {
    display: flex;
    flex-direction: column;
    margin-bottom: 15px;
}

.form-row label {
    font-size: 16px;
    color: #333;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-row input {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 5px;
    outline: none;
    transition: border-color 0.3s ease;
}

.form-row input:focus {
    border-color: #124A5C;
}

.form-row input[type="number"] {
    -webkit-appearance: none; /* Remove number input arrows */
    -moz-appearance: textfield; /* Remove number input arrows */
}

.modal-buttons {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.modal-buttons button {
    padding: 10px 20px;
    margin: 0 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
}

.modal-buttons button#backButton {
    background-color: rgba(18, 74, 92, 0.5); /* 50% opacity */
    color: white;
}

.modal-buttons button#confirmButton {
    background-color: #124A5C;
    color: white;
}

.modal-buttons button:hover {
    opacity: 0.8;
}

/* Divider */
.divider {
    height: 2px;
    background-color: #124A5C;
    margin: 10px 0;
}

/* Style the input fields and labels */
#assessment-form-panel {
    display: flex;
    flex-direction: column;
    gap: 20px;
    font-family: 'Arial', sans-serif;
    padding: 20px;
    background-color: #f8f8f8;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.input-field {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.input-field label {
    font-size: 14px;
    color: #124A5C;
    font-weight: bold;
}

.input-field input {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 8px;
    outline: none;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.input-field input:focus {
    border-color: #124A5C;
    box-shadow: 0 0 5px rgba(18, 74, 92, 0.5);
}

.input-field input[type="number"]::-webkit-outer-spin-button,
.input-field input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.input-field input[type="number"]:focus::-webkit-outer-spin-button,
.input-field input[type="number"]:focus::-webkit-inner-spin-button {
    border-color: #124A5C;
}

/* Add a hover effect to the input fields */
.input-field input:hover {
    border-color: #124A5C;
}

/* Center the question heading */
.assessment-form-panel h4 {
    color: #124A5C;
    font-size: 20px;
    margin-bottom: 15px;
    text-align: center; /* Center align the text */
}

/* Ensure buttons are centered as well */
.modal-buttons {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

/* Modal Background */
.custom-modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1000; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.custom-modal-content {
    background-color: #fefefe;
    margin: 10% auto; /* Centered */
    padding: 20px;
    border: 1px solid #888;
    border-radius: 8px;
    width: 80%; /* Could be more or less, depending on screen size */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow effect */
}

/* Close Button */
.custom-close-button {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    position: absolute;
    top: 10px;
    right: 20px;
    cursor: pointer;
}

/* Close Button on Hover */
.custom-close-button:hover,
.custom-close-button:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* Modal Heading */
.custom-modal h2 {
    text-align: center;
    font-size: 24px;
    color: #124A5C;
}

/* Modal Text */
.custom-modal p {
    font-size: 16px;
    text-align: center;
    color: #555;
}

/* Modal Buttons */
.custom-modal-buttons {
    display: flex;
    justify-content: center; /* Center buttons */
    margin-top: 20px;
}

/* Button Styling */
.custom-modal-buttons button {
    padding: 10px 20px;
    margin: 0 10px; /* Space between buttons */
    border: none;
    border-radius: 5px; /* Rounded corners */
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
}

/* Confirm Button */
.custom-confirm-button {
    background-color: #124A5C; 
    color: white;
}

/* Cancel Button */
.custom-cancel-button {
    background-color: rgba(18, 74, 92, 0.5); /* 50% opacity */
    color: white;
}

/* Hover Effects */
.custom-modal-buttons button:hover {
    opacity: 0.8;
}

/* Ensure the buttons are on the same line and spaced */
.custom-modal-buttons button {
    width: 150px; /* Set a fixed width for better alignment */
}


/* Finalize Button Container */
.finalize-container {
    position: fixed;
            bottom: 20px; 
            right: 20px;  
            display: none;
            background-color: rgba(255, 255, 255, 0.9); 
            border: 1px solid #ccc; 
            padding: 10px; 
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000; 
}

/* Styling for each button */
.set-finalize-review-button {
    position: relative; 
            margin: 5px 10px;
            background-color: #124A5C;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            width: auto; 
            min-width: 200px; 
            white-space: nowrap;
            text-align: center; 
            font-size: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
            transition: background-color 0.3s ease;
}

/* Hover effect for buttons */
.set-finalize-review-button:hover {
    background-color: #B4E3E3;
}

/* Optional: Adjust container width */
.finalize-container {
    width: 100%; /* Make the container full width */
    max-width: 900px; /* Set a maximum width to prevent stretching on large screens */
    margin: 0 auto; /* Center the container horizontally */
}



    </style>
</head>
<body>

<%- include('../../partials/hr_partials') %>

<!-- Main Content Section -->
<div class="main-content">

    <!-- Header Section -->
    <div class="header-section">
        <h2>Applicant Tracking</h2>
        <div class="subheader">Marketing Assistant</div>
    </div>

  <!-- Applicant Tracking Section -->
    <div class="tracking-section">
        <div class="search-container">
            <div class="left-section">
                <input type="text" class="search-bar" id="searchBar" placeholder="Search by Application No., Name, Email, or Status">
                <button class="search-button"><i class="fas fa-search"></i> Search</button>
            </div>
            <div class="right-section">
                <button id="filter-all">All</button>
                <button id="filter-review">For Review</button>
                <button id="filter-evaluation">For Evaluation</button>
                <button id="filter-onboarding">For Onboarding</button>
            </div>            
        </div>
        
<!-- Table for Applicant Data -->
<table class="tracking-table">
    <thead>
        <tr>
            <th>Applicant No.</th>
            <th>Last Name, First Name</th>
            <th>Position Applied</th>
            <th>Applicant Status & Actions</th>
        </tr>
    </thead>
    <tbody>
        <!-- Sample Data Rows -->
        <tr>
            <td>APP00001</td>
            <td>John Doe<br>johndoe@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P1: Initial Screening</td>
        </tr>
        <tr class="status-for-review">
            <td>APP00002</td>
            <td>Jane Smith<br>janesmith@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P1: Awaiting for Line Manager Action <button class="btn-review" data-modal="true">For Review</button></td>
        </tr>
            <td>APP00003</td>
            <td>Robert Brown<br>robertbrown@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P1: PASSED - Score: 90 </td>
        </tr>
            <td>APP00004</td>
            <td>Alice Johnson<br>alicejohnson@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P1: FAILED</td>
        </tr>
        <tr>
            <td>APP00005</td>
            <td>Michael Lee<br>michaellee@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P2: HR Screening Scheduled</td>
        </tr>
        <tr>
            <td>APP00006</td>
            <td>Linda Carter<br>lindacarter@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P2: Awaiting for HR Evaluation</td>
        </tr>
        <tr>
            <td>APP00007</td>
            <td>Chris Walker<br>chriswalker@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P2: HR Evaluation Accomplished - Score: 85 </td>
        </tr>
        <tr>
            <td>APP00008</td>
            <td>Emily Davis<br>emilydavis@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P2: HR Evaluation Accomplished - Score: 30 </td>
        </tr>


        <tr>
            <td>APP00009</td>
            <td>Samuel Adams<br>samueladams@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P2: PASSED</td>
        </tr>


        <tr>
            <td>APP000010</td>
            <td>Sophia Bell<br>sophiabell@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P2: FAILED</td>
        </tr>
        <tr>
            <td>APP000011</td>
            <td>Daniel Green<br>danielgreen@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: Panel Screening Scheduled</td>
        </tr>
        <tr class="status-for-evaluation">
            <td>APP00012</td>
            <td>Laura Hall<br>laurahall@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: Awaiting for Line Manager Evaluation <button class="btn-evaluation">For Evaluation</button> </td>
        </tr>
        <tr class="status-for-review">
            <td>APP00013</td>
            <td>James King<br>jamesking@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: Panel Evaluation Accomplished - Score: 85 <button class="btn-reviewP3">For Review</button></td>
        </tr>
        <tr class="status-for-review">
            <td>APP00014</td>
            <td>Olivia White<br>oliviawhite@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: Panel Evaluation Accomplished - Score: 30  <button class="btn-reviewP3">For Review</button> </td>
        </tr>
            <td>APP00015</td>
            <td>William Scott<br>williamscott@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: PASSED </td>
        </tr>
            <td>APP00016</td>
            <td>Grace Taylor<br>gracetaylor@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: FAILED</td>
        </tr>
        <tr class="status-for-onboarding">
            <td>APP00017</td>
            <td>Ella Martinez<br>ellamartinez@gmail.com</td>
            <td>Marketing Assistant</td>
            <td>P3: PASSED - Job Offer Sent </td>
        </tr>
    </tbody>
</table>
<!-- P1: Awaiting for Line Manager Action Modal -->
<div id="initialScreeningModal" class="modal">
    <div class="modal-content">
        <span class="close-button" id="closeModal">&times;</span>
        <h2>P1: Initial Screening Score Breakdown</h2>
        <div class="divider"></div> <!-- Optional Divider -->
        <div class="applicant-details">
            <h3 id="applicant-name">Jane Smith</h3>
            <p id="applicant-age">Age: 30</p>
            <p id="applicant-email">Email: janesmith@gmail.com</p>
            <p id="applicant-contact">Contact No: 09171234567</p>
        </div>
        <h4>Initial Screening Scores</h4>
        <table class="scores-table">
            <thead>
                <tr>
                    <th>Criteria</th>
                    <th>Score</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Industry Specific Degree</td>
                    <td>1/1</td>
                </tr>
                <tr>
                    <td>Experiences</td>
                    <td>3/4</td>
                </tr>
                <tr>
                    <td>Certifications</td>
                    <td>2/3</td>
                </tr>
                <tr>
                    <td>Hard Skills</td>
                    <td>4/5</td>
                </tr>
                <tr>
                    <td>Soft Skills</td>
                    <td>4/5</td>
                </tr>
                <tr>
                    <td>Work Setup</td>
                    <td>PASSED</td>
                </tr>
                <tr>
                    <td>Availability</td>
                    <td>PASSED</td>
                </tr>
            </tbody>
        </table>
       <!-- Computation Verdict Section -->
       <div class="computation-verdict">
        <strong>Computation Verdict - PASSED | 85.33</strong>
    </div>
        <h4>Uploaded Documents</h4>
        <p><a href="sample_resume.pdf" target="_blank">sample_resume.pdf</a></p>
        <p>Would you like to recommend this applicant for the HR interview?</p>
        <div class="modal-buttons">
            <button id="backButton">Back</button>
            <button id="confirmButton">Confirm</button>
        </div>
    </div>
</div>

<!-- Modal for P3 Review -->
<div id="P3ReviewModal" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>P3: Panel Evaluation Review</h2>
        <div class="divider"></div>
        <div class="applicant-details">
            <h3 id="applicant-name">John Doe</h3>
            <p id="applicant-age">Age: 30</p>
            <p id="applicant-email">Email: johndoe@example.com</p>
            <p id="applicant-contact">Contact No: +1234567890</p>
        </div>

          <!-- Panel Assessment Form Title -->
          <div class="assessment-form-title">
            <h4>Panel Assessment Form</h4>
        </div>

        <div id="assessment-form-panel">
            <div class="input-field">
                <label for="communication-skills">Communication Skills:</label>
                <input type="number" id="communication-skills" name="communication-skills" min="1" max="10" value="8">
            </div>
            <div class="input-field">
                <label for="technical-expertise">Technical Expertise:</label>
                <input type="number" id="technical-expertise" name="technical-expertise" min="1" max="10" value="9">
            </div>
            <div class="input-field">
                <label for="problem-solving">Problem Solving:</label>
                <input type="number" id="problem-solving" name="problem-solving" min="1" max="10" value="7">
            </div>
        </div>

        <h4>Would you like to select this applicant as the top candidate for the position they are applying for?</h4>

        <div class="modal-buttons">
            <button id="backButton" class="back-button">Back</button>
            <button id="confirmButton" class="confirm-button">Confirm</button>
        </div>
    </div>
</div>





<button class="set-interview-button" onclick="setInterviewAvailabilities()">Set Interview Availabilities on Calendly</button>
<!-- Finalize button for review -->
<div class="finalize-container">
    <button class="set-finalize-review-button" id="p1ReviewBtn">P1: Finalize Review and Notify HR</button>
    <button class="set-finalize-review-button" id="p3ReviewBtn">P3: Finalize Review and Notify HR</button>
</div>

<!-- Modal Structure -->
<div id="finalizeModal" class="custom-modal">
    <div class="custom-modal-content">
        <span class="custom-close-button">&times;</span>
        <h2>Confirm Final Review and Notify HR</h2>
        <p>You are about to finalize the review process and notify HR of the selected candidates. All applicants who were not chosen will be marked as failed. This action is irreversible. Do you wish to confirm?</p>
        <div class="custom-modal-buttons">
            <button id="cancelFinalize" class="custom-cancel-button">Back</button>
            <button id="confirmFinalize" class="custom-confirm-button">Confirm</button>
        </div>
    </div>
</div>


    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Function to filter rows based on status
        function filterRowsByStatus(status) {
        const rows = document.querySelectorAll('.tracking-table tbody tr');
        const rowsForReview = [];
        const rowsOtherStatus = [];

        rows.forEach(row => {
            // Show rows matching the status or all rows if status is "all"
            if (status === "all" || row.classList.contains(`status-${status}`)) {
                if (status === "for-review") {
                    // Separate rows with the "For Review" status
                    const mailIconButton = row.querySelector("button.btn-review i.fas.fa-envelope"); // Look for the mail icon inside the button
                    if (mailIconButton) {
                        rowsForReview.push(row); // Rows with mail icon
                    } else {
                        rowsOtherStatus.push(row); // Rows without mail icon
                    }
                } else {
                    rowsOtherStatus.push(row); // All other statuses
                }
                row.style.display = ""; // Show
            } else {
                row.style.display = "none"; // Hide
            }
        });

        // Rearrange "For Review" rows with mail icon last
        if (status === "for-review") {
            const sortedRows = [...rowsOtherStatus, ...rowsForReview]; // Move rows with mail icon to the end
            sortedRows.forEach(row => row.parentElement.appendChild(row)); // Reorder rows in the DOM
            document.querySelector(".finalize-container").style.display = "block"; // Show the finalize button

        } else {
            // For other statuses, just display them in the order they appear
            rowsOtherStatus.forEach(row => row.style.display = "");
            document.querySelector(".finalize-container").style.display = "none"; // Hide the finalize button
        }

        // Highlight the active filter button
        highlightActiveFilter(status);
    }


        // Function to filter rows based on the search input
        function filterTable() {
            const searchValue = document.getElementById("searchBar").value.toLowerCase();
            console.log(`Searching for: ${searchValue}`);
            const rows = document.querySelectorAll('.tracking-table tbody tr');

            rows.forEach(row => {
                const cells = row.querySelectorAll("td");
                const rowText = Array.from(cells)
                    .map(cell => {
                        const button = cell.querySelector("button");
                        // Include button text in the searchable content
                        return button ? cell.textContent.toLowerCase() + " " + button.textContent.toLowerCase() : cell.textContent.toLowerCase();
                    })
                    .join(" ");
                if (rowText.includes(searchValue)) {
                    row.style.display = ""; // Show if search term matches
                    console.log(`Row matches search: ${row.innerText}`);
                } else {
                    row.style.display = "none"; // Hide otherwise
                    console.log(`Row does not match search: ${row.innerText}`);
                }
            });
        }

        // Function to highlight the active filter button
        function highlightActiveFilter(status) {
            console.log(`Highlighting active filter: ${status}`);
            const buttons = document.querySelectorAll(".right-section button");
            buttons.forEach(button => {
                if (button.id === `filter-${status}`) {
                    button.classList.add("active"); // Add active class
                    console.log(`Active button: ${button.id}`);
                } else {
                    button.classList.remove("active"); // Remove active class
                }
            });
        }

        // Initialize buttons for filtering by status
        const buttons = {
            all: document.getElementById("filter-all"),
            review: document.getElementById("filter-review"),
            evaluation: document.getElementById("filter-evaluation"),
            onboarding: document.getElementById("filter-onboarding"),
        };

        // Add event listeners to filter buttons
        buttons.all.addEventListener("click", () => {
            console.log("All filter button clicked");
            filterRowsByStatus("all");
        });
        buttons.review.addEventListener("click", () => {
            console.log("Review filter button clicked");
            filterRowsByStatus("for-review");
        });
        buttons.evaluation.addEventListener("click", () => {
            console.log("Evaluation filter button clicked");
            filterRowsByStatus("for-evaluation");
        });
        buttons.onboarding.addEventListener("click", () => {
            console.log("Onboarding filter button clicked");
            filterRowsByStatus("for-onboarding");
        });

        // Search functionality
        document.querySelector(".search-button").addEventListener("click", () => {
            console.log("Search button clicked");
            filterTable();
        });
        document.getElementById("searchBar").addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                e.preventDefault(); // Prevent form submission if inside a form
                console.log("Enter key pressed in search bar");
                filterTable();
            }
        });

        // Set button text dynamically based on row class
        const rows = document.querySelectorAll('.tracking-table tbody tr');
        rows.forEach(row => {
            const statusCell = row.querySelector('td:last-child');
            const button = statusCell.querySelector('button');
            if (row.classList.contains('status-for-review')) {
                button.textContent = "For Review";
            } else if (row.classList.contains('status-for-onboarding')) {
                button.textContent = "For Onboarding";
            } else if (row.classList.contains('status-for-evaluation')) {
                button.textContent = "For Evaluation";
            } else {
            button.textContent = "For Review";
        } // Default button text
        console.log(`Button text set to: ${button.textContent} for row: ${row.innerText}`);
        });

        // Display all rows initially
        console.log("Displaying all rows initially");
        filterRowsByStatus("all");
    });

    document.addEventListener("DOMContentLoaded", function () {
        const modal = document.getElementById("initialScreeningModal");
        const closeModal = document.getElementById("closeModal");
        const reviewButtons = document.querySelectorAll("tr.status-for-review .btn-review[data-modal='true']");

        // Open the modal when the "For Review" button is clicked
        reviewButtons.forEach(button => {
            button.addEventListener("click", function () {
                const row = button.closest('tr');
                const applicantName = row.querySelector('td:nth-child(2)').innerText.split('\n')[0];
                const applicantEmail = row.querySelector('td:nth-child(2)').innerText.split('\n')[1];

                // Populate modal with applicant details
                document.getElementById("applicant-name").innerText = applicantName;
                document.getElementById("applicant-email").innerText = `Email: ${applicantEmail}`;
                modal.style.display = "block"; // Show the modal
            });
        });

        // Close the modal when the close button is clicked
        closeModal.addEventListener("click", function () {
            modal.style.display = "none";
        });

        // Close the modal when clicking outside of the modal content
        window.addEventListener("click", function (event) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });

        // Add functionality for the confirm button if needed
        document.getElementById("confirmButton").addEventListener("click", function () {
            alert("Applicant recommended for HR interview.");
            modal.style.display = "none"; // Close the modal after confirmation
        });

        // Close the modal when the back button is clicked
        document.getElementById("backButton").addEventListener("click", function () {
            modal.style.display = "none";
        });
    });

    
    document.addEventListener("DOMContentLoaded", function() {
    const reviewButtons = document.querySelectorAll(".btn-reviewP3");
    const modal = document.getElementById("P3ReviewModal");
    const closeButton = modal.querySelector(".close-button");

    reviewButtons.forEach(button => {
        button.addEventListener("click", function(event) {
            // Dummy data for the applicant
            const applicantName = "John Doe";
            const applicantAge = "30";
            const email = "johndoe@example.com";
            const contactNo = "+1234567890";

            // Populate modal with dummy applicant details
            modal.querySelector("#applicant-name").textContent = applicantName;
            modal.querySelector("#applicant-age").textContent = `Age: ${applicantAge}`;
            modal.querySelector("#applicant-email").textContent = `Email: ${email}`;
            modal.querySelector("#applicant-contact").textContent = `Contact No: ${contactNo}`;
            
            // Populate the assessment form with dummy values
            const assessmentPanel = modal.querySelector("#assessment-form-panel");
            assessmentPanel.innerHTML = `
                <div>
                    <label for="communication-skills">Communication Skills:</label>
                    <input type="number" id="communication-skills" name="communication-skills" min="1" max="10" value="8">
                </div>
                <div>
                    <label for="technical-expertise">Technical Expertise:</label>
                    <input type="number" id="technical-expertise" name="technical-expertise" min="1" max="10" value="9">
                </div>
                <div>
                    <label for="problem-solving">Problem Solving:</label>
                    <input type="number" id="problem-solving" name="problem-solving" min="1" max="10" value="7">
                </div>
            `;

            // Show the modal
            modal.style.display = "block";
        });
    });

    closeButton.addEventListener("click", function() {
        modal.style.display = "none";
    });

    window.addEventListener("click", function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    });
});



    document.addEventListener('DOMContentLoaded', function() {
    const evaluationButtons = document.querySelectorAll('.btn-evaluation');
    evaluationButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            window.location.href = '/linemanager/interview-form-line';
        });
    });
});

document.addEventListener("DOMContentLoaded", function () {
    // Select buttons and modal elements
    const p1ReviewBtn = document.getElementById('p1ReviewBtn');
    const p3ReviewBtn = document.getElementById('p3ReviewBtn');
    const finalizeModal = document.getElementById('finalizeModal');
    const closeButton = document.querySelector('.custom-close-button');
    const cancelButton = document.getElementById('cancelFinalize');
    const confirmButton = document.getElementById('confirmFinalize');
    
    // Open modal function
    function openModal() {
        finalizeModal.style.display = 'block';
    }

    // Close modal function
    function closeModal() {
        finalizeModal.style.display = 'none';
    }

    // Add event listeners to buttons
    p1ReviewBtn.addEventListener('click', openModal);
    p3ReviewBtn.addEventListener('click', openModal);

    // Add event listeners to close modal elements
    closeButton.addEventListener('click', closeModal);
    cancelButton.addEventListener('click', closeModal);

    // Optional: Add functionality for confirming the action
    confirmButton.addEventListener('click', function () {
        alert('Review finalized and HR notified!');
        closeModal();
    });

    // Close modal when clicking outside the modal content
    window.addEventListener('click', function (event) {
        if (event.target === finalizeModal) {
            closeModal();
        }
    });
});


</script>
</body>
</html>
