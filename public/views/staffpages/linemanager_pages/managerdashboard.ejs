<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Line Manager Home</title>
    <link rel="stylesheet" href="/css/sidebar.css"> <!-- Linking Sidebar CSS -->
    <link rel="stylesheet" href="/css/hr_pages.css"> <!-- Linking Main Content CSS -->
    <link rel="stylesheet" href="/css/linemanager.css"> <!-- Linking Main Content CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        /* Adding styles for the dashboard */
        h2 {
            color: #2385B0; /* Color for the dashboard title */
            margin-left: 40px; /* Increased space from the left */
            display: flex;
            align-items: center;
            padding: 0 15px;
            justify-content: space-between;
        }
        h3 {
            margin-left: 40px; /* Increased space from the left for the sub-header */
        }
        .content {
            margin-left: 220px; /* Adjust based on your sidebar width to prevent overlap */
            padding: 20px; /* Adding some padding for better spacing */
            background-color: white; /* Set background color to white for the entire content area */
        }
        table {
            width: 80%; /* Full width for the table */
            border-collapse: collapse; /* Collapse borders */
            margin: 20px auto 80px; /* Center table and add space above and below */
        }
        th, td {
            border: 1px solid #ddd; /* Border for table cells */
            padding: 10px; /* Padding for table cells */
            text-align: left; /* Left-align text */
        }
        th {
            background-color: #f2f2f2; /* Light gray background for headers */
        }
        tr:hover {
            background-color: #f1f1f1; /* Hover effect for table rows */
            height: 60px; /* Set a minimum height for the rows */
        }
        .action-button {
            background-color: #007bff; /* Bootstrap primary color */
            color: white;
            padding: 8px 12px;
            text-decoration: none;
            border-radius: 5px;
        }
        .action-button:hover {
            background-color: #0056b3; /* Darker shade for hover effect */
        }
        .chart-container {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin: 20px auto;
            padding: 19px;
            background-color: #f9f9f9; 
            border: 1px solid #ddd; 
            border-radius: 8px;
            width: 90%;
            max-width: 1500px; 
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); 
        }
        .chart-box {
            flex: 1; 
            margin: 10px;
            text-align: center; 
            background-color: #fff; 
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #ddd;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); 
        }
        .chart-box canvas {
            max-width: 100%;
            height: 230px;
        }
        h3 {
            margin-bottom: 15px;
            font-size: 18px;
            color: #333;
        }
        #notification-bell {
            margin-right: 15px;
            background: none;
            border: none;
            cursor: pointer;
            position: relative;
        }

        #notification-bell i {
            font-size: 25px;
            color: #07ACB9;
        }

        #notification-bell i:hover {
            color: #065d6a;
        }

        #notification-count {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: red;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 12px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        /* Notification Panel */
        #notification-panel {
            position: fixed;
            top: 0;
            right: -60%; /* hidden off-screen */
            width: 50%; 
            height: 100%;
            background-color: #fff;
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            overflow-y: auto;
            transition: right 0.3s ease-in-out;
            z-index: 1000;
        }

        #notification-panel h3 {
            margin: 0;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
            font-size: 20px;
            color: #07ACB9;
        }

        #notification-panel ul {
            list-style: none;
            padding: 0;
            margin: 10px 0;
        }

        #notification-panel ul li {
            padding: 10px;
            border-bottom: 1px solid #eee;
            color: #555;
        }

        #notification-panel ul li:last-child {
            border-bottom: none;
        }

        /* Show panel */
        #notification-panel.open {
            right: 0; /* Slide into view */
        }

        /* Notification Item Styles */
        .notification-item {
            margin-top: 20px;
            display: flex;
            align-items: flex-start;
            margin-bottom: 20px;
        }

        .notification-item img {
            border-radius: 50%;
            width: 50px;
            height: 50px;
            margin-right: 15px;
        }

        .notification-item .notification-content {
            flex: 1;
        }

        .notification-item .headline {
            font-weight: bold;
            color: black;
        }

        .notification-item .content {
            margin-left: 0px;
            padding: 0px;
            margin-top: 5px;
            color: #555;
            font-size: 14px;
        }

        .notification-item .date {
            margin-top: 10px;
            font-size: 12px;
            color: #888;
        }
    </style>
</head>
<body>
    <%- include('../../partials/linemanager_partials') %>
    <!-- Main content -->
    <div class="main-content">
        <h2>
            Line Manager Dashboard
            <button id="notification-bell">
                <i class="fas fa-bell"></i>
                <span id="notification-count">3</span>
            </button>
        </h2>
        <div id="notification-panel">
            <h3>Notifications</h3>
            <div id="recent-notifications"></div>
            <button id="see-previous-notifications" style="display:none;">See Previous Notifications</button>
        </div>
        <!-- Success and Error Messages -->
        <div class="messages">
            <% if (successMessage && successMessage.length > 0) { %>
                <div class="alert alert-success">
                    <%= successMessage %>
                </div>
            <% } %>
            <% if (errorMessage && errorMessage.length > 0) { %>
                <div class="alert alert-error">
                    <%= errorMessage.dbError %>
                </div>
            <% } %>
        </div>

        <div class="chart-container">
            <!-- Attendance Logs Chart -->
            <div class="chart-box">
                <h3>Attendance Logs</h3>
                <canvas id="attendanceLogsChart"></canvas>
            </div>
            <!-- All Leave Requests Chart -->
            <div class="chart-box">
                <h3>Leave Requests</h3>
                <canvas id="leaveRequestsChart"></canvas>
            </div>
            <!-- Leave Requests Per Week Chart -->
            <div class="chart-box">
                <h3>Leave Requests Per Week</h3>
                <canvas id="leaveRequestsPerWeekChart"></canvas>
            </div>
        </div>

        <!-- Attendance Logs Section -->
        <section class="attendance-logs">
            <h2>Attendance Logs</h2>
            <table>
                <thead>
                    <tr>
                        <th>Last Name</th>
                        <th>First Name</th>
                        <th>Date</th>
                        <th>Department</th>
                        <th>Job Position</th>
                        <th>Time In</th>
                        <th>Time Out</th>
                        <th>Active Working Hours</th>
                    </tr>
                </thead>
                <tbody>
                    <% attendanceLogs.forEach(log => { %>
                        <tr>
                            <td><%= log.lastName %></td>
                            <td><%= log.firstName %></td>
                            <td><%= log.date %></td>
                            <td><%= log.department %></td>
                            <td><%= log.jobTitle %></td>
                            <td><%= log.timeIn %></td>
                            <td><%= log.timeOut %></td>
                            <td><%= log.activeWorkingHours %></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </section>

        <!-- Approved Leave Requests Table -->
        <div class="approvedLeaves">
            <h3>Approved Leave Requests</h3>
            <table>
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Filed Date</th>
                        <th>Department</th>
                        <th>Leave Type</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (approvedLeaves && approvedLeaves.length > 0) { %>
                        <% approvedLeaves.forEach(leave => { %>
                            <tr>
                                <td><%= leave.lastName %>, <%= leave.firstName %></td>
                                <td><%= leave.filedDate %></td>
                                <td><%= leave.department %></td>
                                <td><%= leave.type %></td>
                                <td><%= leave.startDate %></td>
                                <td><%= leave.endDate %></td>
                                <td><%= leave.status %></td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="7">No approved leave requests found.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <!-- All Leave Requests Table -->
        <div class="allLeaves">
            <div style="display: flex; align-items: center;">
                <h3 style="margin-right: 10px;">All Leave Requests</h3>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Filed Date</th>
                        <th>Department</th>
                        <th>Leave Type</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                        <th>Action</th> <!-- New Action Column -->
                    </tr>
                </thead>
                <tbody>
                    <% if (allLeaves && allLeaves.length > 0) { %>
                        <% allLeaves.forEach(leave => { %>
                            <tr>
                                <td><%= leave.lastName %>, <%= leave.firstName %></td>
                                <td><%= leave.filedDate %></td>
                                <td><%= leave.department %></td>
                                <td><%= leave.type %></td>
                                <td><%= leave.startDate %></td>
                                <td><%= leave.endDate %></td>
                                <td><%= leave.status %></td>
                                <td>
                                    <% if (leave.userId) { %>
                                        <a href="/linemanager/leaverequest?userId=<%= leave.userId %>" class="action-button">View Leave Request</a>
                                    <% } else { %>
                                        No User ID
                                    <% } %>
                                </td>                                 
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="8">No leave requests found.</td> <!-- Adjust colspan to 8 -->
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Script for the Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Line Graph: Attendance Logs (based on Active Working Hours)
        const attendanceLogsData = <%- JSON.stringify(attendanceLogs) %>;

        // Sum active working hours for each date
        const attendanceByDate = attendanceLogsData.reduce((acc, log) => {
            const date = log.date;
            const activeHours = parseFloat(log.activeWorkingHours) || 0; 
            acc[date] = (acc[date] || 0) + activeHours;
            return acc;
        }, {});

        // Create the chart with the summed active working hours
        new Chart(document.getElementById('attendanceLogsChart'), {
            type: 'line',
            data: {
                labels: Object.keys(attendanceByDate), // Dates
                datasets: [{
                    label: 'Active Working Hours',
                    data: Object.values(attendanceByDate), // Summed active working hours
                    borderColor: '#2385B0',
                    tension: 0.3,
                    fill: false,
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: true } },
                scales: { 
                    x: { title: { display: true, text: 'Dates' } },
                    y: { title: { display: true, text: 'Active Working Hours' } }
                }
            }
        });

        // Line Chart: Leave Requests Per Week
        const leaveRequestsData = <%- JSON.stringify(allLeaves) %>; <!-- Updated here -->
        const leaveWeeklyCounts = leaveRequestsData.reduce((acc, leave) => {
            const leaveDate = new Date(leave.filedDate);
            const startOfYear = new Date(leaveDate.getFullYear(), 0, 1);
            const weekNumber = Math.ceil(((leaveDate - startOfYear) / (24 * 60 * 60 * 1000) + startOfYear.getDay() + 1) / 7);

            const weekKey = `Week ${weekNumber}, ${leaveDate.getFullYear()}`;
            acc[weekKey] = (acc[weekKey] || 0) + 1;
            return acc;
        }, {});

        new Chart(document.getElementById('leaveRequestsPerWeekChart'), {
            type: 'line',
            data: {
                labels: Object.keys(leaveWeeklyCounts),
                datasets: [{
                    label: 'Leave Requests Per Week',
                    data: Object.values(leaveWeeklyCounts),
                    borderColor: '#FF6384',
                    tension: 0.3,
                    fill: false,
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: true } },
                scales: { 
                    x: { title: { display: true, text: 'Weeks' } },
                    y: { title: { display: true, text: 'Count' } }
                }
            }
        });

        // Pie Chart: Leave Request Status (Approved vs Pending)
        const leaveRequestStatuses = <%- JSON.stringify(allLeaves) %>;
        const statusCounts = leaveRequestStatuses.reduce((acc, leave) => {
            acc[leave.status] = (acc[leave.status] || 0) + 1;
            return acc;
        }, {});

        new Chart(document.getElementById('leaveRequestsChart'), {
            type: 'pie',
            data: {
                labels: Object.keys(statusCounts),
                datasets: [{
                    data: Object.values(statusCounts),
                    backgroundColor: ['#2385B0', '#FF6384'],
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: true } }
            }
        });
    </script>

    <!-- JavaScript for sidebar functionality -->
    <script>
        // Toggle active class for sidebar links
        document.querySelectorAll('.sidebar ul li a').forEach(link => {
            link.addEventListener('click', function() {
                document.querySelectorAll('.sidebar ul li a').forEach(link => link.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Toggle collapsible content
        document.querySelectorAll('.collapsible-header').forEach(header => {
            header.addEventListener('click', function() {
                var content = this.nextElementSibling;
                if (content.style.display === 'block') {
                    content.style.display = 'none';
                } else {
                    // Hide all other collapsible contents
                    document.querySelectorAll('.collapsible-content').forEach(item => {
                        if (item !== content) {
                            item.style.display = 'none';
                        }
                    });
                    content.style.display = 'block';
                }
            });
        });

        document.getElementById('notification-bell').addEventListener('click', function () {
            const panel = document.getElementById('notification-panel');
            panel.classList.toggle('open'); 
        });

        // close panel by clicking out of it
        document.addEventListener('click', function (event) {
            const panel = document.getElementById('notification-panel');
            const bell = document.getElementById('notification-bell');
            if (!panel.contains(event.target) && !bell.contains(event.target)) {
                panel.classList.remove('open');
            }
        });

        // // Sample notification data
        // const notifications = [
        //     {
        //         employeePhoto: "/images/profile.png",
        //         headline: "REQUIRED 360 Degree Feedback Submission",
        //         content: "Your feedback is required. Deadline of Submitting Feedback is at 5 PM.",
        //         date: new Date('2025-01-24T10:00:00')
        //     },
        //     {
        //         employeePhoto: "/images/profile.png",
        //         headline: "REQUIRED 360 Degree Feedback Submission",
        //         content: "Your feedback is required. Deadline of Submitting Feedback is at 5 PM.",
        //         date: new Date('2025-01-23T10:00:00')
        //     },
        //     {
        //         employeePhoto: "/images/profile.png",
        //         headline: "System Maintenance Tomorrow",
        //         content: "The system will be down from 2 AM to 4 AM for maintenance.",
        //         date: new Date('2025-01-22T08:30:00')
        //     },
        // ];

        // Sample notification data (Replace this with dynamic data if needed)
const notifications = [
    {
        employeePhoto: "/images/profile.png",
        applicantStatus: "P1 - Awaiting for Line Manager Action; HR PASSED",
        headline: "Awaiting Your Approval",
        content: "Required Line Manager Action",
        date: new Date()
    },
    {
        employeePhoto: "/images/profile.png",
        headline: "System Maintenance Tomorrow",
        content: "The system will be down from 2 AM to 4 AM for maintenance.",
        date: new Date('2025-01-22T08:30:00')
    }
];

        

        // Function to format date
        function formatDate(date) {
            const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };
            return new Intl.DateTimeFormat('en-US', options).format(date);
        }

        // Function to display recent notifications
        function displayNotifications() {
            const recentNotificationsContainer = document.getElementById("recent-notifications");
            const seePreviousButton = document.getElementById("see-previous-notifications");

            // Filter notifications to show only recent ones
            const recentNotifications = notifications.filter(notification => {
                const timeDifference = new Date() - notification.date;
                return timeDifference <= 24 * 60 * 60 * 1000; 
            });

            recentNotifications.forEach(notification => {
                const notificationElement = document.createElement("div");
                notificationElement.classList.add("notification-item");

                notificationElement.innerHTML = `
                    <img src="${notification.employeePhoto}" alt="Employee Photo">
                    <div class="notification-content">
                        <div class="headline">${notification.headline}</div>
                        <div class="content">${notification.content}</div>
                        <div class="date">${formatDate(notification.date)}</div>
                    </div>
                `;

                recentNotificationsContainer.appendChild(notificationElement);
            });

            // Show "See Previous Notifications" button if there are older notifications
            if (recentNotifications.length < notifications.length) {
                seePreviousButton.style.display = "block";
                seePreviousButton.addEventListener("click", () => {
                    // Show all notifications when the button is clicked
                    displayAllNotifications();
                });
            }
        }

        // Function to display all notifications (including older ones)
        function displayAllNotifications() {
            const recentNotificationsContainer = document.getElementById("recent-notifications");
            recentNotificationsContainer.innerHTML = ''; // Clear recent notifications

            notifications.forEach(notification => {
                const notificationElement = document.createElement("div");
                notificationElement.classList.add("notification-item");

                notificationElement.innerHTML = `
                    <img src="${notification.employeePhoto}" alt="Employee Photo">
                    <div class="notification-content">
                        <div class="headline">${notification.headline}</div>
                        <div class="content">${notification.content}</div>
                        <div class="date">${formatDate(notification.date)}</div>
                    </div>
                `;

                recentNotificationsContainer.appendChild(notificationElement);
            });

            // Hide the "See Previous Notifications" button after it's clicked
            document.getElementById("see-previous-notifications").style.display = "none";
        }

        // Call the function to display recent notifications on page load
        window.onload = function() {
            displayNotifications();
        };

    </script>
</body>
</html>
