<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Objective and Performance Review Tracker</title>
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/recordsandperformancetracker.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
     
    </style>
</head>
<body>

    <%- include('../../partials/employee_partials') %>

<div class="main-content">
    <div class="container p-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold mb-2"><i class="fas fa-comment-dots mr-2"></i> 360 Degree Feedback Questionnaires</h1>
            <p class="text-gray-600">
                <%= quarter %> - Select a department member to provide feedback
            </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
            <!-- Staff Members List -->
            <div class="md:col-span-1">
                <div class="card">
                    <div class="card-header bg-blue-50">
                        <h2 class="card-title text-lg">Department Members</h2>
                    </div>
                    <div class="card-content p-0">
                        <ul class="divide-y divide-gray-200" id="staff-members-list">
                            <% staffList.forEach(function(member) { %>
                                <li 
                                    data-user-id="<%= member.userId %>"
                                    class="p-4 cursor-pointer hover:bg-gray-50 staff-member-item"
                                >
                                    <div class="font-medium"><%= member.lastName %>, <%= member.firstName %></div>
                                    <div class="text-sm text-gray-500"><%= member.jobTitle %></div>
                                </li>
                            <% }); %>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Questionnaire Form -->
            <div class="md:col-span-3" id="questionnaire-container">
                <div class="h-full flex items-center justify-center bg-gray-50 rounded-lg p-8 border border-dashed border-gray-300">
                    <p class="text-gray-500 text-center">Select a department member to begin the 360 feedback process</p>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    document.addEventListener('DOMContentLoaded', function() {
        const staffMembersList = document.getElementById('staff-members-list');
        const questionnaireContainer = document.getElementById('questionnaire-container');
        const activeQuarter = '<%= quarter %>';
        let selectedMemberId = null;
        
        // Handle staff member selection
        staffMembersList.addEventListener('click', function(event) {
            const listItem = event.target.closest('.staff-member-item');
            if (!listItem) return;
            
            // Remove active class from all items
            document.querySelectorAll('.staff-member-item').forEach(item => {
                item.classList.remove('bg-blue-50');
            });
            
            // Add active class to selected item
            listItem.classList.add('bg-blue-50');
            
            // Get the user ID
            selectedMemberId = listItem.dataset.userId;
            
            // Show loading state
            questionnaireContainer.innerHTML = `
                <div class="h-full flex items-center justify-center">
                    <div class="text-center">
                        <div class="w-12 h-12 border-4 border-t-4 border-t-blue-500 border-gray-200 rounded-full animate-spin mx-auto"></div>
                        <p class="mt-4 text-gray-600">Loading questionnaire...</p>
                    </div>
                </div>
            `;
            
            // Fetch questionnaire data
            fetch(`/employee/api/getQuestionnaireData?userId=${selectedMemberId}&quarter=${activeQuarter}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        renderQuestionnaire(data, listItem.textContent);
                    } else {
                        throw new Error(data.message || 'Failed to load questionnaire data');
                    }
                })
                .catch(error => {
                    questionnaireContainer.innerHTML = `
                        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
                            <p>${error.message}</p>
                        </div>
                    `;
                });
        });
        
        // Function to render the questionnaire
        function renderQuestionnaire(data, employeeName) {
            const { feedback, objectives, hardSkills, softSkills } = data;
            const startDate = new Date(feedback.setStartDate).toLocaleDateString();
            const endDate = new Date(feedback.setEndDate).toLocaleDateString();
            
            // Extract employee first and last name from the displayed text
            const nameParts = employeeName.trim().split(',');
            const lastName = nameParts[0] ? nameParts[0].trim() : '';
            const firstName = nameParts[1] ? nameParts[1].trim().split('\n')[0] : '';
            
            // Build the questionnaire HTML
            let html = `
                <form id="feedback-form" class="card">
                    <div class="card-header bg-blue-50">
                        <h2 class="card-title">
                            <i class="fas fa-comment-dots mr-2"></i> 
                            360 Degree Feedback Questionnaire
                        </h2>
                    </div>
                    <div class="card-content p-6">
                        <!-- Date Information -->
                        <div class="flex flex-col md:flex-row gap-6 mb-6">
                            <div class="flex-1">
                                <label class="block text-sm font-medium mb-1">Start Date:</label>
                                <div class="text-gray-900 p-2 bg-gray-50 rounded border">
                                    ${startDate}
                                </div>
                            </div>
                            <div class="flex-1">
                                <label class="block text-sm font-medium mb-1">End Date:</label>
                                <div class="text-gray-900 p-2 bg-gray-50 rounded border">
                                    ${endDate}
                                </div>
                            </div>
                        </div>
    
                        <!-- Employee Details -->
                        <div class="bg-gray-50 p-4 rounded-lg mb-6 border">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div><strong>Employee:</strong> ${lastName}, ${firstName}</div>
                                <div><strong>Position:</strong> ${feedback.jobTitle || 'Employee'}</div>
                                <div><strong>Company:</strong> Prime Infrastructure</div>
                                <div><strong>Department:</strong> ${feedback.deptName || 'Department'}</div>
                            </div>
                        </div>
    
                        <hr class="my-6 border-gray-200" />
    
                        <!-- Hidden fields for form submission -->
                        <input type="hidden" name="feedbackId" value="${feedback.id}">
                        <input type="hidden" name="quarter" value="${feedback.quarter}">
                        <input type="hidden" name="userId" value="${feedback.userId}">
                        <input type="hidden" name="reviewerUserId" value="${'<%= user.userId %>'}}">

            `;
            
            // Objectives Section
            html += `
                <!-- Objectives Section -->
                <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4 text-blue-900">
                        <i class="fas fa-bullseye mr-2"></i> Objective Setting Questions
                    </h3>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">KRA/Objectives</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">KPI</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Target</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">UOM</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Weight</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Feedback</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
            `;
            
            objectives.forEach((objective, index) => {
                html += `
                    <tr>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${objective.description || objective.objectiveDescription}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${objective.kpi || ''}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${objective.target || ''}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${objective.uom || ''}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${objective.weight || ''}</td>
                        <td class="px-4 py-4">
                            <div class="space-y-2">
                                <input 
                                    type="number" 
                                    name="objectives[${index}][quantitative]" 
                                    min="1" 
                                    max="5" 
                                    class="w-full p-2 border rounded" 
                                    placeholder="Score (1-5)" 
                                    required
                                />
                                <textarea 
                                    name="objectives[${index}][qualitative]"
                                    class="w-full p-2 border rounded" 
                                    rows="2"
                                    placeholder="Qualitative feedback..."
                                    required
                                ></textarea>
                                <input 
                                    type="hidden" 
                                    name="objectives[${index}][objectiveId]" 
                                    value="${objective.objectiveId}"
                                />
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            html += `
                            </tbody>
                        </table>
                    </div>
                </div>
            `;
            
            // Hard Skills Section
            html += `
                <!-- Hard Skills Section -->
                <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4 text-blue-900">
                        <i class="fas fa-cogs mr-2"></i> Hard Skills
                    </h3>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Skill Name</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Feedback</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
            `;
            
            hardSkills.forEach((skill, index) => {
                html += `
                    <tr>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${skill.jobReqSkillName}</td>
                        <td class="px-4 py-4">
                            <div class="space-y-2">
                                <input 
                                    type="number" 
                                    name="hardSkills[${index}][quantitative]" 
                                    min="1" 
                                    max="5" 
                                    class="w-full p-2 border rounded" 
                                    placeholder="Score (1-5)" 
                                    required
                                />
                                <textarea 
                                    name="hardSkills[${index}][qualitative]"
                                    class="w-full p-2 border rounded" 
                                    rows="2"
                                    placeholder="Qualitative feedback..."
                                    required
                                ></textarea>
                                <input 
                                    type="hidden" 
                                    name="hardSkills[${index}][skillId]" 
                                    value="${skill.jobReqSkillId}"
                                />
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            html += `
                            </tbody>
                        </table>
                    </div>
                </div>
            `;
            
            // Soft Skills Section
            html += `
                <!-- Soft Skills Section -->
                <div class="mb-8">
                    <h3 class="text-xl font-semibold mb-4 text-blue-900">
                        <i class="fas fa-comments mr-2"></i> Soft Skills
                    </h3>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Skill Name</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Feedback</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
            `;
            
            softSkills.forEach((skill, index) => {
                html += `
                    <tr>
                        <td class="px-4 py-4 whitespace-nowrap text-sm">${skill.jobReqSkillName}</td>
                        <td class="px-4 py-4">
                            <div class="space-y-2">
                                <input 
                                    type="number" 
                                    name="softSkills[${index}][quantitative]" 
                                    min="1" 
                                    max="5" 
                                    class="w-full p-2 border rounded" 
                                    placeholder="Score (1-5)" 
                                    required
                                />
                                <textarea 
                                    name="softSkills[${index}][qualitative]"
                                    class="w-full p-2 border rounded" 
                                    rows="2"
                                    placeholder="Qualitative feedback..."
                                    required
                                ></textarea>
                                <input 
                                    type="hidden" 
                                    name="softSkills[${index}][skillId]" 
                                    value="${skill.jobReqSkillId}"
                                />
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            html += `
                            </tbody>
                        </table>
                    </div>
                </div>
            `;
            
            // Submit Button
            html += `
                    <!-- Submit Button -->
                    <div class="flex justify-end mt-6">
                        <button
                            type="submit"
                            class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md flex items-center"
                        >
                            <i class="fas fa-save mr-2"></i> Submit Feedback
                        </button>
                    </div>
                </div>
            </form>
            `;
            
            // Set the HTML and add event listener
            questionnaireContainer.innerHTML = html;
            
            // Add form submission handler
            document.getElementById('feedback-form').addEventListener('submit', function(event) {
                event.preventDefault();
                
                // Get form data
                const formData = new FormData(this);
                const formDataObj = {};
                
                // Convert FormData to object
                for (let [key, value] of formData.entries()) {
                    if (key.includes('[') && key.includes(']')) {
                        // Handle nested form data (arrays and objects)
                        const parsedKey = parseFormDataKey(key);
                        setNestedValue(formDataObj, parsedKey, value);
                    } else {
                        formDataObj[key] = value;
                    }
                }
                
                // Clean up arrays (convert from objects to actual arrays)
                ['objectives', 'hardSkills', 'softSkills'].forEach(key => {
                    if (formDataObj[key]) {
                        formDataObj[key] = Object.values(formDataObj[key]);
                    }
                });
                
                // Submit data
                fetch('/employee/api/submitFeedback', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formDataObj)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success message
                        questionnaireContainer.innerHTML = `
                            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
                                <p>Feedback submitted successfully!</p>
                            </div>
                        `;
                        
                        // Reset selection
                        document.querySelectorAll('.staff-member-item').forEach(item => {
                            item.classList.remove('bg-blue-50');
                        });
                        
                        // Reload page after delay
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        throw new Error(data.message || 'Failed to submit feedback');
                    }
                })
                .catch(error => {
                    // Show error message below form
                    const errorDiv = document.createElement('div');
                    errorDiv.className = 'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mt-4';
                    errorDiv.innerHTML = `<p>${error.message}</p>`;
                    document.getElementById('feedback-form').appendChild(errorDiv);
                });
            });
        }
        
        // Helper function to parse complex form data keys like objectives[0][quantitative]
        function parseFormDataKey(key) {
            const keyParts = key.match(/([^\[\]]+)|\[([^\[\]]*)\]/g);
            const parsedKey = [];
            
            if (keyParts) {
                keyParts.forEach(part => {
                    // Remove brackets and add to parsedKey array
                    const cleanPart = part.replace(/\[|\]/g, '');
                    if (cleanPart !== '') {
                        parsedKey.push(cleanPart);
                    }
                });
            }
            
            return parsedKey;
        }
        
        // Helper function to set nested values in an object
        function setNestedValue(obj, keyParts, value) {
            let current = obj;
            
            for (let i = 0; i < keyParts.length; i++) {
                const key = keyParts[i];
                const isLast = i === keyParts.length - 1;
                
                if (isLast) {
                    // Set the final value
                    current[key] = value;
                } else {
                    // Create empty object/array for intermediate keys if they don't exist
                    if (!current[key]) {
                        // If next key is numeric, create an array, otherwise an object
                        const nextKey = keyParts[i + 1];
                        current[key] = !isNaN(parseInt(nextKey)) ? [] : {};
                    }
                    current = current[key];
                }
            }
            
            return obj;
        }
    });
    </script>

</body>
</html>

    