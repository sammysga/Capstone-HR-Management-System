<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Attendance Page</title>
    <link rel="stylesheet" href="/css/sidebar.css"> <!-- Linking Sidebar CSS -->

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 20px;
            display: flex;
            background-color: #f9f9f9;
        }
        .main-content {
            margin-left: 250px;
            padding: 20px;
            width: calc(100% - 250px); 
        }
        h1 {
            text-align: center;
            color: #124A5C;
        }
        .sidebar {
            width: 250px; 
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            padding-top: 20px;
        }
        .form-container {
            max-width: 600px;
            width: 100%;
            margin: auto;
            padding: 30px;
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: white;
        }
        .form-input, .action-select {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 16px;
        }
        .save-btn {
            background-color: #124A5C;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            width: 100%;
        }
        .save-btn:hover {
            background-color: #059ca4;
        }
        .records-container {
            margin-top: 20px;
            overflow-x: auto;
        }
        .record {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin: 5px 0;
            background-color: #f1f1f1;
        }
        .no-records {
            color: #124A5C;
            font-weight: bold;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid #ccc;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #124A5C;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>

    <%- include('../../partials/employee_partials') %>

    <div class="main-content">
        <h1>Attendance</h1>
        <div class="form-container">
        <form id="attendance-form">
            <label for="employeeName">Employee Name</label>
            <input type="text" id="employeeName" name="employeeName" value="<%= user.firstName %> <%= user.lastName %>" class="form-input" required readonly>

            <label for="attendanceDate">Attendance Date</label>
            <input type="date" id="attendanceDate" name="selectedDate" value="<%= todayDate %>" class="form-input" required>
             
            <label for="attendanceTime">Attendance Time</label>
            <input type="time" id="attendanceTime" name="attendanceTime" value="<%= currentTime %>" class="form-input" required>
            
            <label for="actionSelect">Action</label>
            <select id="actionSelect" name="action" class="action-select" required>
                <option value="" disabled selected>Choose an Action</option>
                <option value="Time In">Time In</option>
                <option value="Time Out">Time Out</option>
            </select>
            <button type="submit" class="save-btn">Submit</button>
        </form>
        </div>

        <!-- Table for today's attendance -->
        <div class="records-container" id="records-container">
            <h2>Attendance Records</h2>
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Action</th>
                        <th>Time</th>
                        <th>Location (City)</th>
                    </tr>
                </thead>
                <tbody id="attendance-records">
                    <% if (records && records.length > 0) { %>
                        <% let hasRecordsForToday = false; %>
                        <% records.forEach(record => { %>
                            <% if (new Date(record.attendanceDate).toISOString().split('T')[0] === todayDate) { %>
                                <% hasRecordsForToday = true; %>
                                <tr>
                                    <td><%= record.attendanceDate %></td>
                                    <td><%= record.attendanceAction %></td>
                                    <td><%= record.attendanceTime %></td>
                                    <td><%= record.city || 'Unknown' %></td>
                                </tr>
                            <% } %>
                        <% }) %>
        
                        <% if (!hasRecordsForToday) { %>
                            <tr>
                                <td colspan="4" class="no-records">No attendance records found for today.</td>
                            </tr>
                        <% } %>
                    <% } else { %>
                        <tr>
                            <td colspan="4" class="no-records">No attendance records found.</td>
                        </tr>
                    <% } %>
                </tbody>          
            </table>
            <div id="no-records-message" class="no-records" style="display: none;">
                No attendance records found for today.
            </div>
        </div>        
    </div>
    
    <script>
    // Handle form submission using JavaScript
    document.getElementById('attendance-form').addEventListener('submit', async function (event) {
        event.preventDefault(); // Prevent traditional form submission

        if (!navigator.geolocation) {
            alert("Geolocation is not supported by your browser.");
            return;
        }

        navigator.geolocation.getCurrentPosition(
            async function (position) {
                const latitude = position.coords.latitude;
                const longitude = position.coords.longitude; // Fixed Typo
                const city = await getCityFromCoordinates(latitude, longitude);

                submitAttendance(latitude, longitude, city); // Pass city
            },
            function (error) {
                console.warn("Skipping location check. Error:", error.message);
                submitAttendance(null, null, "Unknown");  // Default to "Unknown" if location fails
            },
            { timeout: 10000 }
        );
    });

    // Function to get city name from latitude and longitude
    async function getCityFromCoordinates(latitude, longitude) {
        try {
            const response = await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json`);
            const data = await response.json();
            return data.address.city || data.address.town || data.address.village || "Unknown";
        } catch (error) {
            console.error('Error fetching city:', error);
            return "Unknown";
        }
    }

    // Function to submit attendance
    async function submitAttendance(latitude, longitude, city) {
        const formData = {
            attendanceDate: document.getElementById('attendanceDate').value,
            attendanceTime: document.getElementById('attendanceTime').value,
            attendanceAction: document.getElementById('actionSelect').value, // Time In or Time Out
            latitude,
            longitude,
            city  
        };

        console.log('Form data being sent:', formData); 

        try {
            const response = await fetch('/employee/attendance', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            });

            const data = await response.json();
            if (response.ok) {
                alert(data.message);
                window.location.href = 'http://localhost:4000/employee/attendance';
            } else {
                alert('Error: ' + data.message);
            }
        } catch (error) {
            console.error('Error submitting attendance:', error);
            alert('There was an error submitting your attendance.');
        }
    }

    // Helper function to format date (YYYY-MM-DD -> Month Day, Year)
    function formatDate(dateStr) {
        const date = new Date(dateStr);
        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
    }

    // Helper function to format time (24-hour to 12-hour format)
    function formatTime(timeStr) {
        const [hours, minutes] = timeStr.split(':');
        const ampm = hours >= 12 ? 'PM' : 'AM';
        const formattedHours = hours % 12 || 12; 
        return `${formattedHours}:${minutes} ${ampm}`;
    }

    // Toggle active class for sidebar links
    document.querySelectorAll('.sidebar ul li a').forEach(link => {
        link.addEventListener('click', function() {
            document.querySelectorAll('.sidebar ul li a').forEach(link => link.classList.remove('active'));
            this.classList.add('active');
        });
    });

    // Toggle collapsible content
    document.querySelectorAll('.collapsible-header').forEach(header => {
        header.addEventListener('click', function() {
            var content = this.nextElementSibling;
            if (content.style.display === 'block') {
                content.style.display = 'none';
            } else {
                // Hide all other collapsible contents
                document.querySelectorAll('.collapsible-content').forEach(item => {
                    if (item !== content) {
                        item.style.display = 'none';
                    }
                });
                content.style.display = 'block';
            }
        });
    });

    // Handle navigation for Performance Management links
    document.querySelectorAll('.collapsible-content a').forEach(link => {
        link.addEventListener('click', function(event) {
            event.preventDefault(); // Prevent default link behavior
            
            // Perform the desired action or navigation
            const targetUrl = this.getAttribute('href');
            window.location.href = targetUrl; // Navigate to the target URL
        });
    });
    </script>
</body>
</html>