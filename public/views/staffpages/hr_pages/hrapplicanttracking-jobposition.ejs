<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Applicant Tracker - Job Position</title>
    <link rel="stylesheet" href="/css/sidebar.css"> <!-- Linking Sidebar CSS -->
    <link rel="stylesheet" href="/css/linemanager.css"> <!-- Linking Main Content CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"> <!-- FontAwesome for icons -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .main-content {
            margin-left: 350px;
            padding: 20px;
            width: calc(100% - 350px);
            background-color: #FFFFFF;
        }

        .header-section {
            margin-bottom: 10px;
            margin-left: 5px;
            font-size: 24px;
            text-align: left;
        }

        .subheader {
            font-size: 20px;
            margin-left: 5px;
            margin-bottom: 20px;
            color: #555;
        }

        .tracking-section {
            background-color: #FFFFFF;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin: 10px 5px;
        }

        .search-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .search-bar {
            padding: 8px;
            width: 370px;
            font-size: 16px;
            border: 1px solid #ddd;
        }

        .search-button {
            margin-left: 10px;
            background-color: #124A5C;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            font-size: 16px;
        }

        .right-section {
            display: flex;
            gap: 10px;
        }

        .right-section button {
            padding: 10px 15px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            background-color:#124A5C;
            color: white;
            transition: background-color 0.3s ease;
        }

        .right-section button:hover {
            background-color: #B4E3E3       ;
            color: white;
        }

        .tracking-table {
            width: 100%;
            border-collapse: collapse;
        }

        .tracking-table th, 
        .tracking-table td {
            padding: 10px 10px;
            border: 1px solid #ddd;
        }

        .tracking-table th,
        .tracking-table td {
            text-align: left;
        }

        .tracking-table th:nth-child(1),
        .tracking-table td:nth-child(1) {
            width: 10%; 
        }

        .tracking-table th:nth-child(2),
        .tracking-table td:nth-child(2) {
            width: 20%;
        }

        .tracking-table th:nth-child(3),
        .tracking-table td:nth-child(3) {
            width: 15%; 
        }

        .tracking-table th:nth-child(4),
        .tracking-table td:nth-child(4) {
            width: 15%; 
        }

        .tracking-table td:last-child {
            display: flex;
            justify-content: space-between; 
            align-items: center;
        }

        .tracking-table td:last-child span {
            text-align: left; 
            flex-grow: 1;
        }

        .tracking-table th,
        .tracking-table td {
            text-align: left;
        }

        .tracking-table td:last-child button {
            margin-left: 10px; 
        }
        .tracking-table tr:hover {
            background-color: #f1f1f1;
        }
       
        .job-title-container {
            display: flex;
            align-items: center;
        }

        /* Style for status circle */
        .status-circle {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px; 
        }

        /* Green status circle */
        .status-circle.green {
            background-color: green;
        }

        /* Gray status circle */
        .status-circle.gray {
            background-color: gray;
        }

        /* Button styling for status actions */
        .status-button {
            background-color: white; 
            color: black; 
            border: 1px solid #124A5C; 
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            text-align: center;
            width: auto;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .status-button:hover {
            background-color: #124A5C; 
            color: white; 
        }

        .btn-review, .btn-evaluation, .btn-onboarding {
            background-color: white;
            color: black;
            border: 1px solid #124A5C;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 14px;
            transition: background-color 0.3s ease, color 0.3s ease;
            width: 150px;
            text-align: center; 
        }

        .btn-review:hover, .btn-evaluation:hover, .btn-onboarding:hover {
            background-color: #124A5C;
            color: white;
        }
        .set-interview-button {
                    padding: 10px 20px;
                    background-color: #124A5C;
                    color: white;
                    border: none;
                    cursor: pointer;
                    font-size: 16px;
                    margin-top: 20px;
                    display: block;
                    width: 20%;
                    text-align: center;
                }
                .set-interview-button:hover {
                    background-color: #B4E3E3       ;
                    color: white;
                }


        .set-finalize-review-button {
            position: relative; 
            margin: 5px 10px;
            background-color: #124A5C;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            width: auto; 
            min-width: 200px; 
            white-space: nowrap;
            text-align: center; 
            font-size: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
            transition: background-color 0.3s ease;
        }

        .set-finalize-review-button:hover {
            background-color: #B4E3E3;
            color: #124A5C; 
        }


        .finalize-container {
            position: fixed;
            bottom: 20px; 
            right: 20px;  
            display: none;
            background-color: rgba(255, 255, 255, 0.9); 
            border: 1px solid #ccc; 
            padding: 10px; 
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000; 
        }

        /* Styling for the Modals */
        .modal {
            display: none; 
            position: fixed; 
            z-index: 1000; 
            left: 0;
            top: 0;
            width: 100%; 
            height: 100%; 
            overflow: auto; 
            background-color: rgba(0,0,0,0.4); 
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto; 
            padding: 20px;
            border: 1px solid #888;
            border-radius: 8px; 
            width: 80%; 
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); 
        }

        .modal-header, .modal-body, .modal-footer {
            text-align: center;
        }

        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close-button:hover,
        .close-button:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .modal-buttons {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .modal-buttons button {
            padding: 10px 20px;
            margin: 0 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .modal-buttons button#backButton {
            background-color: rgba(18, 74, 92, 0.5); 
            color: white;
        }

        .modal-buttons button#confirmButton {
            background-color: #124A5C; 
            color: white;
        }

        .modal-buttons button:hover {
            opacity: 0.8; 
        }

        .divider {
            height: 2px; 
            background-color: #124A5C; 
            margin: 10px 0; 
        }

        .modal-question {
            display: flex;
            justify-content: center;  
            align-items: center;
            text-align: center;
            margin-top: 20px;  
            margin-bottom: 20px; 
            font-size: 16px;
        }

        /* Modal Styling */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    overflow: auto;
}

.modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 20px;
    border-radius: 8px;
    width: 60%; /* Adjust as necessary */
    text-align: center; /* Center content inside modal */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.modal-content h2, .modal-content p {
    color: #124A5C;
    margin-bottom: 20px;
}

.modal-buttons {
    display: flex;
    justify-content: center;
    gap: 20px; /* Space between buttons */
}

.modal-buttons button {
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.back-button {
    background-color: rgba(18, 74, 92, 0.5); /* Transparent background */
    color: white;
}

.confirm-button {
    background-color: #124A5C;
    color: white;
}

.modal-buttons button:hover {
    opacity: 0.8;
}

/* Close Button (X) */
.close-button {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    float: right;
    cursor: pointer;
}

.close-button:hover {
    color: black;
}

.review-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
}

.review-modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    border-radius: 8px;
    width: 50%;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    text-align: center;
}

.review-close-button {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.review-close-button:hover,
.review-close-button:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.review-modal-buttons {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.review-modal-buttons button {
    padding: 10px 20px;
    margin: 0 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
}

.review-modal-back-button {
    background-color: rgba(18, 74, 92, 0.5);
    color: white;
}

.review-modal-confirm-button {
    background-color: #124A5C;
    color: white;
}

.review-modal-buttons button:hover {
    opacity: 0.8;
}

    </style>
</head>
<body>

<%- include('../../partials/hr_partials') %>

<!-- Main Content Section -->
<div class="main-content">

    <!-- Header Section -->
    <div class="header-section">
        <h2>Applicant Tracking</h2>
        <div class="subheader">Data Analyst</div>
    </div>

  <!-- Applicant Tracking Section -->
    <div class="tracking-section">
        <div class="search-container">
            <div class="left-section">
                <input type="text" class="search-bar" id="searchBar" placeholder="Search by Application No., Name, Email, or Status">
                <button class="search-button"><i class="fas fa-search"></i> Search</button>
            </div>
            <div class="right-section">
                <button id="filter-all">All</button>
                <button id="filter-review">For Review</button>
                <button id="filter-evaluation">For Evaluation</button>
                <button id="filter-onboarding">For Onboarding</button>
            </div>            
        </div>

        
<!-- Table for Applicant Data -->
<table class="tracking-table" style="width: 100%; margin-bottom: 20px; border-collapse: collapse;">
    <thead>
        <tr>
            <th>Applicant No.</th>
            <th>Last Name, First Name</th>
            <th>Department</th>
            <th>Position Applied</th>
            <th>Applicant Status & Actions</th>
        </tr>
    </thead>
    <tbody>
        <% if (applicants && applicants.length) { %>
            <% applicants.forEach((applicant, index) => { %>
                <tr>
                    <td><%= index + 1 %></td>
                    <td>
                        <%= applicant.lastName %>, <%= applicant.firstName %>
                        <br>
                        <small style="color: #555;"><%= applicant.userEmail || 'Email not available' %></small>
                    </td>
                    
                    <td><%= applicant.deptName %></td> <!-- Display department name -->
                    <td><%= applicant.jobTitle %></td> <!-- Display job title -->
                    <td>
                        <!-- Display Applicant Status -->
                        <span><strong>Status:</strong> <%= applicant.applicantStatus || 'Pending' %></span>
                        <div style="margin-top: 10px;">
                            <% if (applicant.applicantStatus === 'P1 - Awaiting for HR Action') { %>
                                <button 
                                    class="btn-review" 
                                    onclick="openReviewModal(
                                        '<%= applicant.lastName %>', 
                                        '<%= applicant.firstName %>', 
                                        '<%= applicant.userEmail %>', 
                                        '<%= applicant.phoneNo %>'
                                    )">
                                    For Review
                                </button>
                            <% } else if (applicant.applicantStatus === 'P2 - Awaiting for HR Evaluation') { %>
                                <button 
    class="btn-evaluation" 
    onclick="openEvaluationForm('<%= applicant.applicantId %>')">
    For Evaluation
</button>                              
                            <% } %>
                        </div>
                    </td>   
                </tr>
            <% }); %>
        <% } else { %>
            <tr>
                <td colspan="5">No applicants found.</td>
            </tr>
        <% } %>
    </tbody>
    
    
</table>


<h2 class="header-section" style="margin-top: 30px; margin-bottom: 10px;">Onboarding</h2>

<table class="tracking-table" style="width: 100%; border-collapse: collapse;">
    <thead>
        <tr>
            <th>Application No.</th>
            <th>Last Name, First Name</th>
            <th>Department</th>
            <th>Position Applied</th>
            <th>Application Status & Actions</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>APP00018</td>
            <td>William Scott<br>williamscott@gmail.com</td>
            <td>IT</td>
            <td>Data Analyst</td>
            <td>First Day Checklist Sent</td>
        </tr>
        <tr class="status-for-onboarding">
            <td>APP00019</td>
            <td>Grace Taylor<br>gracetaylor@gmail.com</td>
            <td>IT</td>
            <td>Data Analyst</td>
            <td>Checklist Accomplished <button class="btn-onboarding" onclick="openModal('accountSetupReminderModal')">For Onboarding</button></td>
        </tr>
        <tr>
            <td>APP00020</td>
            <td>Ella Martinez<br>ellamartinez@gmail.com</td>
            <td>IT</td>
            <td>Data Analyst</td>
            <td>Account Created</td>
        </tr>
    </tbody>
</table>

<!--Frontend Modals-->

<!-- Modal for Confirm Release of Job Offer -->
<div id="releaseJobOfferModal" class="modal">
    <div class="modal-content">
        <span class="close-button" onclick="closeModal('releaseJobOfferModal')">&times;</span>
        <h2 style="color: #07ACB9;">Name</h2>
        <p><strong>Age:</strong> Text</p>
        <p><strong>Email:</strong> Text</p>
        <p><strong>Contact No:</strong> Text</p>
        
        <div class="divider"></div>
        
        <h3>Panel Assessment Form Breakdown</h3>
        <p>[INSERT SUBMITTED FORM HERE]</p>
        
        <div class="modal-question">
            <p><strong>Would you like to release the job offer and notify the applicant they are being considered for hiring?</strong></p>
        </div>
        
        <div class="modal-buttons">
            <button id="backButton" onclick="closeModal('releaseJobOfferModal')">Back</button>
            <button id="confirmButton" onclick="sendNotification()">Notify Applicant</button>
        </div>
    </div>
</div>

<!-- Modal for Moving Applicant for Onboarding -->
<div id="moveToOnboardingModal" class="modal">
    <div class="modal-content">
        <span class="close-button" onclick="closeModal('moveToOnboardingModal')">&times;</span>
        <h1>Job Offer Confirmation</h1>
        
        <h2><strong>Applicant Personal Information</strong></h2>
        <h3><strong>Name</strong></h3>
        <p><strong>Age:</strong> Text</p>
        <p><strong>Email:</strong> Text</p>
        <p><strong>Contact No:</strong> Text</p>
        
        <div class="modal-question">
            <p><strong>Would you like to move this applicant for onboarding?</strong></p>
        </div>
        
        <div class="modal-buttons">
            <button id="backButton" onclick="closeModal('moveToOnboardingModal')">Back</button>
            <button id="confirmButton" onclick="confirmOnboarding()">Confirm</button>
        </div>
    </div>
</div>

<!-- Modal for Account Setup Creation Reminder -->
<div id="accountSetupReminderModal" class="modal">
    <div class="modal-content">
        <span class="close-button" onclick="closeModal('accountSetupReminderModal')">&times;</span>
        <h1>Account Setup Creation Reminder</h1>
        
        <h2><strong>Applicant Personal Information</strong></h2>
        <h3><strong>Name</strong></h3>
        <p><strong>Age:</strong> Text</p>
        <p><strong>Email:</strong> Text</p>
        <p><strong>Contact No:</strong> Text</p>
        
        <div class="modal-question">
            <p><strong>Have you created an account for the employee through the Manage Employees page and emailed them the account details?</strong></p>
        </div>
        
        <div class="modal-buttons">
            <button id="backButton" onclick="closeModal('accountSetupReminderModal')">Back</button>
            <button id="confirmButton" onclick="confirmAccountSetup()">Confirm</button>
        </div>
    </div>
</div>


<button class="set-interview-button" onclick="setInterviewAvailabilities()">Set Interview Availabilities on Calendly</button>

<!-- Finalize button for review -->
<div class="finalize-container">
    <button class="set-finalize-review-button" id="finalize-p1">P1: Finalize Review and Notify Applicants</button>
    <button class="set-finalize-review-button" id="finalize-p2">P2: Finalize Review and Notify Applicants</button>
    <button class="set-finalize-review-button" id="finalize-p3">P3: Finalize Review and Notify Applicants</button>
</div>

<!-- Modal for P1: Finalize Review and Notify Applicants -->
<div id="finalizeModalP1" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>Confirm Final Review and Notify Applicants</h2>
        <p>You are about to finalize the review process and notify all applicants who were not selected that they have not advanced to the next stage. This action is irreversible. Are you sure you want to proceed?</p>
        <div class="modal-buttons">
            <button id="backButtonP1" class="back-button">Back</button>
            <button id="confirmButtonP1" class="confirm-button">Confirm</button>
        </div>
    </div>
</div>

<!-- Modal for P2: Finalize Review and Notify Applicants -->
<div id="finalizeModalP2" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>Confirm Final Review and Notify Applicants</h2>
        <p>You are about to finalize the review process and notify all applicants who were not selected that they have not advanced to the next stage. This action is irreversible. Are you sure you want to proceed?</p>
        <div class="modal-buttons">
            <button id="backButtonP2" class="back-button">Back</button>
            <button id="confirmButtonP2" class="confirm-button">Confirm</button>
        </div>
    </div>
</div>

<!-- Modal for P3: Finalize Review and Notify Applicants -->
<div id="finalizeModalP3" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>Confirm Final Review and Notify Applicants</h2>
        <p>You are about to finalize the review process and notify all applicants who were not selected that they have not advanced to the next stage. This action is irreversible. Are you sure you want to proceed?</p>
        <div class="modal-buttons">
            <button id="backButtonP3" class="back-button">Back</button>
            <button id="confirmButtonP3" class="confirm-button">Confirm</button>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="reviewModal" class="review-modal">
    <div class="review-modal-content">
        <span class="review-close-button">&times;</span>
        <h3>Applicant Details</h3>
        <div class="applicant-details">
            <p><strong>Name:</strong> <span id="applicant-name"></span></p>
            <p><strong>Age:</strong> <span id="applicant-age"></span></p>
            <p><strong>Email:</strong> <span id="applicant-email"></span></p>
            <p><strong>Contact No.:</strong> <span id="applicant-contact"></span></p>
        </div>
        <h4>HR Assessment Form Breakdown</h4>
        <!-- Add form breakdown here -->
        <h4>Would you like to select this applicant as the top candidate and recommend them for the panel interview?</h4>
        <div class="review-modal-buttons">
            <button id="backButton" class="review-modal-back-button">Back</button>
            <button id="confirmButton" class="review-modal-confirm-button" onclick="confirmSelection()">Confirm</button>
        </div>
    </div>
</div>



    </div>
</div>

<script>

function openEvaluationForm(applicantId) {
        if (applicantId) {
            window.location.href = `/hr/evaluation-form?applicantId=${applicantId}`;
        } else {
            alert("Applicant ID is missing.");
        }
    }



    

// confirm button for modal for review
        // Handle Confirm button click in the modal
        function confirmSelection() {
    const applicantName = document.getElementById("applicant-name").textContent.split(", ");
    const lastName = applicantName[0];
    const firstName = applicantName[1];

    fetch("/update-applicant", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ lastName, firstName }),
    })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                alert(result.message);
                location.reload(); // Refresh the page
            } else {
                alert("Failed to update applicant status. Please try again.");
            }
        })
        .catch(error => {
            console.error("Error:", error);
            alert("An error occurred while updating the applicant status.");
        });
}




function openReviewModal(lastName, firstName, email, phoneNo) {
        document.getElementById('applicant-name').textContent = `${lastName}, ${firstName}`;
        document.getElementById('applicant-email').textContent = email || 'N/A';
        document.getElementById('applicant-contact').textContent = phoneNo || 'N/A';

        // Show the modal
        document.getElementById('reviewModal').style.display = 'block';
    }

    // Close the modal
    document.querySelector('.review-close-button').addEventListener('click', function () {
        document.getElementById('reviewModal').style.display = 'none';
    });

    // Close modal if clicked outside the modal content
    window.addEventListener('click', function (event) {
        const modal = document.getElementById('reviewModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
    
    document.addEventListener("DOMContentLoaded", function () {
        // Function to filter rows based on status
        function filterRowsByStatus(status) {
        const rows = document.querySelectorAll('.tracking-table tbody tr');
        const rowsForReview = [];
        const rowsOtherStatus = [];

        rows.forEach(row => {
            // Show rows matching the status or all rows if status is "all"
            if (status === "all" || row.classList.contains(`status-${status}`)) {
                if (status === "for-review") {
                    // Separate rows with the "For Review" status
                    const mailIconButton = row.querySelector("button.btn-review i.fas.fa-envelope"); // Look for the mail icon inside the button
                    if (mailIconButton) {
                        rowsForReview.push(row); // Rows with mail icon
                    } else {
                        rowsOtherStatus.push(row); // Rows without mail icon
                    }
                } else {
                    rowsOtherStatus.push(row); // All other statuses
                }
                row.style.display = ""; // Show
            } else {
                row.style.display = "none"; // Hide
            }
        });

        // Rearrange "For Review" rows with mail icon last
        if (status === "for-review") {
            const sortedRows = [...rowsOtherStatus, ...rowsForReview]; // Move rows with mail icon to the end
            sortedRows.forEach(row => row.parentElement.appendChild(row)); // Reorder rows in the DOM
            document.querySelector(".finalize-container").style.display = "block"; // Show the finalize button

        } else {
            // For other statuses, just display them in the order they appear
            rowsOtherStatus.forEach(row => row.style.display = "");
            document.querySelector(".finalize-container").style.display = "none"; // Hide the finalize button
        }

        // Highlight the active filter button
        highlightActiveFilter(status);
    }


    // Event listeners for finalize buttons
    document.getElementById("finalize-p1").addEventListener("click", function () {
        finalizeReview("P1");
    });

    document.getElementById("finalize-p2").addEventListener("click", function () {
        finalizeReview("P2");
    });

    document.getElementById("finalize-p3").addEventListener("click", function () {
        finalizeReview("P3");
    });

    // Finalize review function
    function finalizeReview(phase) {
        alert(`${phase}: Finalizing review and notifying applicants.`);
        // Add logic to handle finalization for the specified phase
        // Example: Update database, send notifications, etc.
        console.log(`${phase}: Review finalized. Notifications sent.`);
    }


        // Function to filter rows based on the search input
        function filterTable() {
            const searchValue = document.getElementById("searchBar").value.toLowerCase();
            const rows = document.querySelectorAll('.tracking-table tbody tr');

            rows.forEach(row => {
                const cells = row.querySelectorAll("td");
                const rowText = Array.from(cells)
                    .map(cell => {
                        const button = cell.querySelector("button");
                        // Include button text in the searchable content
                        return button ? cell.textContent.toLowerCase() + " " + button.textContent.toLowerCase() : cell.textContent.toLowerCase();
                    })
                    .join(" ");
                if (rowText.includes(searchValue)) {
                    row.style.display = ""; // Show if search term matches
                } else {
                    row.style.display = "none"; // Hide otherwise
                }
            });
        }

        // Function to highlight the active filter button
        function highlightActiveFilter(status) {
            const buttons = document.querySelectorAll(".right-section button");
            buttons.forEach(button => {
                if (button.id === `filter-${status}`) {
                    button.classList.add("active"); // Add active class
                } else {
                    button.classList.remove("active"); // Remove active class
                }
            });
        }

        // Initialize buttons for filtering by status
        const buttons = {
            all: document.getElementById("filter-all"),
            review: document.getElementById("filter-review"),
            evaluation: document.getElementById("filter-evaluation"),
            onboarding: document.getElementById("filter-onboarding"),
        };

        // Add event listeners to filter buttons
        buttons.all.addEventListener("click", () => filterRowsByStatus("all"));
        buttons.review.addEventListener("click", () => filterRowsByStatus("for-review"));
        buttons.evaluation.addEventListener("click", () => filterRowsByStatus("for-evaluation"));
        buttons.onboarding.addEventListener("click", () => filterRowsByStatus("for-onboarding"));

        // Search functionality
        document.querySelector(".search-button").addEventListener("click", filterTable);
        document.getElementById("searchBar").addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                e.preventDefault(); // Prevent form submission if inside a form
                filterTable();
            }
        });

        // Set button text dynamically based on row class
        const rows = document.querySelectorAll('.tracking-table tbody tr');
        rows.forEach(row => {
            const statusCell = row.querySelector('td:last-child');
            const button = statusCell.querySelector('button');
            if (row.classList.contains('status-for-review')) {
                button.textContent = "For Review";
            } else if (row.classList.contains('status-for-onboarding')) {
                button.textContent = "For Onboarding";
            } else if (row.classList.contains('status-for-evaluation')) {
                button.textContent = "For Evaluation";
            }
        });

        // Display all rows initially
        filterRowsByStatus("all");
    });

    document.addEventListener("DOMContentLoaded", function () {
        const evaluationButtons = document.querySelectorAll(".btn-evaluation");

        evaluationButtons.forEach(button => {
            button.addEventListener("click", function () {
                window.location.href = "/hr/evaluation-form";
            });
        });
    });

    // Function to open the modal
    function openModal(modalId) {
        document.getElementById(modalId).style.display = "block";
    }

    // Function to close the modal
    function closeModal(modalId) {
        document.getElementById(modalId).style.display = "none";
    }

    // Function for sending notification to the applicant
    function sendNotification() {
        alert("Sent notification to applicant");
        closeModal('releaseJobOfferModal');
    }

    // Function for confirming onboarding
    function confirmOnboarding() {
        alert("Applicant moved to onboarding");
        closeModal('moveToOnboardingModal');
    }

    // Function for confirming account setup
    function confirmAccountSetup() {
        alert("Account setup confirmed");
        closeModal('accountSetupReminderModal');
    }

    document.addEventListener("DOMContentLoaded", function() {
    const finalizeP1Button = document.getElementById("finalize-p1");
    const finalizeP2Button = document.getElementById("finalize-p2");
    const finalizeP3Button = document.getElementById("finalize-p3");

    const modalP1 = document.getElementById("finalizeModalP1");
    const modalP2 = document.getElementById("finalizeModalP2");
    const modalP3 = document.getElementById("finalizeModalP3");

    const closeButtonP1 = modalP1.querySelector(".close-button");
    const backButtonP1 = modalP1.querySelector("#backButtonP1");
    const confirmButtonP1 = modalP1.querySelector("#confirmButtonP1");

    const closeButtonP2 = modalP2.querySelector(".close-button");
    const backButtonP2 = modalP2.querySelector("#backButtonP2");
    const confirmButtonP2 = modalP2.querySelector("#confirmButtonP2");

    const closeButtonP3 = modalP3.querySelector(".close-button");
    const backButtonP3 = modalP3.querySelector("#backButtonP3");
    const confirmButtonP3 = modalP3.querySelector("#confirmButtonP3");

    // Show the modal for P1 when the "P1: Finalize Review and Notify Applicants" button is clicked
    finalizeP1Button.addEventListener("click", function() {
        modalP1.style.display = "block";
    });

    // Show the modal for P2 when the "P2: Finalize Review and Notify Applicants" button is clicked
    finalizeP2Button.addEventListener("click", function() {
        modalP2.style.display = "block";
    });

    // Show the modal for P3 when the "P3: Finalize Review and Notify Applicants" button is clicked
    finalizeP3Button.addEventListener("click", function() {
        modalP3.style.display = "block";
    });

    // Close the modal for P1 when the close button (X) is clicked
    closeButtonP1.addEventListener("click", function() {
        modalP1.style.display = "none";
    });

    // Close the modal for P2 when the close button (X) is clicked
    closeButtonP2.addEventListener("click", function() {
        modalP2.style.display = "none";
    });

    // Close the modal for P3 when the close button (X) is clicked
    closeButtonP3.addEventListener("click", function() {
        modalP3.style.display = "none";
    });

    // Close the modal for P1 when the back button is clicked
    backButtonP1.addEventListener("click", function() {
        modalP1.style.display = "none";
    });

    // Close the modal for P2 when the back button is clicked
    backButtonP2.addEventListener("click", function() {
        modalP2.style.display = "none";
    });

    // Close the modal for P3 when the back button is clicked
    backButtonP3.addEventListener("click", function() {
        modalP3.style.display = "none";
    });

    // Handle the confirm action for P1 (you can add your own confirmation logic here)
    confirmButtonP1.addEventListener("click", function() {
        // Add your confirmation action here (e.g., notify applicants)
        alert("P1 Review finalized and applicants notified.");
        modalP1.style.display = "none"; // Close the modal after confirming
    });

    // Handle the confirm action for P2 (you can add your own confirmation logic here)
    confirmButtonP2.addEventListener("click", function() {
        // Add your confirmation action here (e.g., notify applicants)
        alert("P2 Review finalized and applicants notified.");
        modalP2.style.display = "none"; // Close the modal after confirming
    });

    // Handle the confirm action for P3 (you can add your own confirmation logic here)
    confirmButtonP3.addEventListener("click", function() {
        // Add your confirmation action here (e.g., notify applicants)
        alert("P3 Review finalized and applicants notified.");
        modalP3.style.display = "none"; // Close the modal after confirming
    });

    // Close the modal if the user clicks outside of it (for P1)
    window.addEventListener("click", function(event) {
        if (event.target == modalP1) {
            modalP1.style.display = "none";
        }
    });

    // Close the modal if the user clicks outside of it (for P2)
    window.addEventListener("click", function(event) {
        if (event.target == modalP2) {
            modalP2.style.display = "none";
        }
    });

    // Close the modal if the user clicks outside of it (for P3)
    window.addEventListener("click", function(event) {
        if (event.target == modalP3) {
            modalP3.style.display = "none";
        }
    });
});

// Function to open the modal
function openModal(name, age, email, contact) {
    document.getElementById("applicant-name").value = name;
    document.getElementById("applicant-age").value = age;
    document.getElementById("applicant-email").value = email;
    document.getElementById("applicant-contact").value = contact;
    document.getElementById("reviewModal").style.display = "block";
}

// Add event listeners to all "For Review" buttons
document.querySelectorAll(".btn-review").forEach(button => {
    button.addEventListener("click", function() {
        const parentRow = button.closest("tr");
        const name = parentRow.querySelector("td:nth-child(2)").innerText.split("\n")[0];
        const email = parentRow.querySelector("td:nth-child(2)").innerText.split("\n")[1];
        const age = "N/A";  // Placeholder for age
        const contact = "N/A";  // Placeholder for contact
        openModal(name, age, email, contact);
    });
});

// Function to close the modal
document.querySelector(".review-close-button").addEventListener("click", function() {
    document.getElementById("reviewModal").style.display = "none";
});

// Close modal when clicking outside of the modal content
window.addEventListener("click", function(event) {
    if (event.target == document.getElementById("reviewModal")) {
        document.getElementById("reviewModal").style.display = "none";
    }
});

// Back button functionality
document.getElementById("backButton").addEventListener("click", function() {
    document.getElementById("reviewModal").style.display = "none";
});

// Confirm button functionality
document.getElementById("confirmButton").addEventListener("click", function() {
    alert("Applicant has been selected and recommended for panel interview.");
    document.getElementById("reviewModal").style.display = "none";
});

</script>


</body>
</html>
