<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Offboarding Request</title>
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/hr.css">
    <style>
        /* Main Content Styling */
        .main-content {
            margin-left: 285px;
            padding: 20px;
            background-color: #f9f9f9;
        }
        .account-info-header {
            margin-top: 20px;
            font-size: 1.8rem;
            font-weight: bold;
            color: #07ACB9;
            margin-bottom: 30px;
        }
        .form-section {
            margin-bottom: 30px;
        }
        .form-section h2 {
            font-size: 1.2rem;
            color: #07ACB9;
            margin-bottom: 10px;
        }
        .form-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
            margin-bottom: 15px;
        }
        .form-group label {
            font-size: 14px;
            color: #555;
        }
        .form-group input,
        .form-group textarea {
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 100%;
            box-sizing: border-box;
        }
        .form-group textarea {
            resize: vertical;
            height: 100px;
        }
        .offboarding-btn {
            background-color: #124A5C;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .offboarding-btn:hover {
            background-color: #07ACB9;
        }

        /* Modal Styling */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 15px;
            width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            position: relative;
        }
        .close-modal {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            cursor: pointer;
            color: #657081;
        }
        .close-modal:hover {
            color: #124A5C;
        }
        #clearanceChecklist {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        #clearanceChecklist li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }
        #clearanceChecklist li:last-child {
            border-bottom: none;
        }
        .delete-item {
            background: none;
            border: none;
            cursor: pointer;
            color: red;
            font-size: 18px;
        }
        .delete-item:hover {
            color: darkred;
        }
        .add-item {
            background-color: #07ACB9;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            margin-top: 10px;
            transition: background-color 0.3s ease;
        }
        .add-item:hover {
            background-color: #124A5C;
        }
        #newChecklistItem,
        #newContactPerson {
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 100%;
            box-sizing: border-box;
            margin-top: 10px;
        }
        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
        .modal-actions button {
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }
        .modal-actions .save-btn {
            background-color: #124A5C;
            color: white;
        }
        .modal-actions .save-btn:hover {
            background-color: #07ACB9;
        }
        .modal-actions .cancel-btn {
            background-color: rgba(101, 112, 129, 0.1);
            color: #657081;
        }
        .modal-actions .cancel-btn:hover {
            background-color: rgba(101, 112, 129, 0.2);
        }
        .checklist-item {
            display: flex;
            align-items: center;
            gap: 10px;
            width: 100%;
        }
        .checklist-item span {
            flex: 1;
        }
        .contact-person {
            font-size: 14px;
            color: #555;
            margin-top: 5px;
        }

        /* Approval Section Styling */
        .approval-section {
            margin-top: 30px;
            padding: 20px;
            border-top: 1px solid #eee;
        }
        
        .approval-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .approval-container.approved {
            background-color: #e8f5e9;
            border-left: 4px solid #4CAF50;
        }
        
        .approval-container h3 {
            color: #124A5C;
            margin-bottom: 10px;
        }
        
        .approve-btn {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 15px;
        }
        
        .approve-btn:hover {
            background-color: #388E3C;
        }
    </style>
</head>
<body>
    <%- include('../../partials/hr_partials') %>

    <div class="main-content">
        <h1 class="account-info-header">Resignation</h1>
        <form id="resignationForm">
            <!-- Employee Details Section -->
            <div class="form-section">
                <h2>Employee Details</h2>
                <div class="form-group">
                    <label for="employee">Employee</label>
                    <input type="text" id="employee" name="employee" value="<%= staffName %>" disabled>
                </div>
                <div class="form-group">
                    <label for="department">Department</label>
                    <input type="text" id="department" name="department" value="<%= department %>" disabled>
                </div>
            </div>

            <!-- Resignation Details Section -->
            <div class="form-section">
                <h2>Resignation Details</h2>
                <div class="form-group">
                    <label for="reason">Reason</label>
                    <textarea id="reason" name="reason" disabled><%= request.message %></textarea>
                </div>
            </div>

            <div class="form-section">
                <h2>Line Manager Review</h2>
                <div class="form-group">
                    <label for="lineManagerNotes">Line Manager's Notes</label>
                    <textarea id="lineManagerNotes" name="lineManagerNotes" disabled><%= request.line_manager_notes || 'No notes provided' %></textarea>
                </div>
                <div class="form-group">
                    <label for="lineManagerDecision">Decision</label>
                    <input type="text" id="lineManagerDecision" name="lineManagerDecision" value="<%= request.line_manager_decision || 'Pending' %>" disabled>
                </div>
            </div>

            <!-- Dates Section -->
            <div class="form-section">
                <h2>Dates</h2>
                <div class="form-group">
                    <label for="lastDay">Last Day of Employee</label>
                    <input type="date" id="lastDay" name="lastDay" value="<%= new Date(request.last_day).toISOString().split('T')[0] %>" disabled>
                </div>
            </div>

            <!-- Open Clearance Form Modal Button -->
            <button type="button" class="offboarding-btn" id="openClearanceModal">Open Clearance Form</button>

            <% if (request.status !== 'Sent to Employee' && request.status !== 'Completed by Employee' && request.status !== 'Completed') { %>
                <button type="button" class="offboarding-btn" id="sendClearance">Send Clearance to Employee</button>
            <% } %>
        </form>

        <!-- Approval Section -->
        <div class="approval-section">
            <% if (request.status === 'Completed by Employee') { %>
                <div style="margin-top: 20px; padding: 15px; background-color: #e8f5e9; border-radius: 5px; border-left: 4px solid #4CAF50;">
                    <h3 style="color: #2E7D32; margin-bottom: 10px;">Employee has completed all clearance items</h3>
                    <p>Review the employee's completed clearance checklist and approve to finalize the offboarding process.</p>
                    <button id="approveBtn" style="background-color: #4CAF50; color: white; border: none; padding: 10px 20px; border-radius: 5px; margin-top: 10px; cursor: pointer;">
                        Approve Offboarding
                    </button>
                </div>
            <% } else if (request.status === 'Completed') { %>
                <div style="margin-top: 20px; padding: 15px; background-color: #e8f5e9; border-radius: 5px; border-left: 4px solid #4CAF50;">
                    <h3 style="color: #2E7D32; margin-bottom: 10px;">Offboarding Completed</h3>
                    <p>This offboarding request has been completed and approved.</p>
                </div>
            <% } %>   
        </div>
    </div>

    <!-- Clearance Form Modal -->
    <div id="clearanceModal" class="modal">
        <div class="modal-content">
            <span class="close-modal" id="closeModal">&times;</span>
            <h2>Employee Clearance Form</h2>
            <div class="form-group">
                <label for="clearanceChecklist">Clearance Checklist</label>
                <ul id="clearanceChecklist">
                    <% checklist.forEach((item, index) => { %>
                        <li>
                            <div class="checklist-item">
                                <span data-task><%= item.task %></span>
                                <span class="contact-person" data-contact>Contact: <%= item.contactPerson %></span>
                                <button class="delete-item" onclick="deleteChecklistItem(this)">✖</button>
                            </div>
                        </li>
                    <% }) %>
                </ul>
                <input type="text" id="newChecklistItem" placeholder="Add new task">
                <input type="text" id="newContactPerson" placeholder="Add contact person">
                <button class="add-item" onclick="addChecklistItem()">Add Item</button>
            </div>
            <div class="modal-actions">
                <button type="button" class="cancel-btn" id="cancelClearance">Cancel</button>
                <button type="button" class="save-btn" id="saveClearance">Save Clearance</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Send Clearance to Employee
            const sendClearanceBtn = document.getElementById("sendClearance");
            if (sendClearanceBtn) {
                sendClearanceBtn.addEventListener("click", function () {
                    const requestId = "<%= request.requestId %>"; 
                    fetch("/send-clearance", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ requestId }),
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            alert("Clearance sent to employee successfully!");
                            window.location.reload();
                        } else {
                            alert("Failed to send clearance: " + data.error);
                        }
                    })
                    .catch(error => {
                        console.error("Error sending clearance:", error);
                        alert("An error occurred. Please check the console for details.");
                    });
                });
            }

            // Open Modal
            const openModalBtn = document.getElementById("openClearanceModal");
            if (openModalBtn) {
                openModalBtn.addEventListener("click", function () {
                    const modal = document.getElementById("clearanceModal");
                    modal.style.display = "flex";
                });
            }

            // Close Modal
            const closeModalBtn = document.getElementById("closeModal");
            if (closeModalBtn) {
                closeModalBtn.addEventListener("click", function () {
                    document.getElementById("clearanceModal").style.display = "none";
                });
            }

            const cancelClearanceBtn = document.getElementById("cancelClearance");
            if (cancelClearanceBtn) {
                cancelClearanceBtn.addEventListener("click", function () {
                    document.getElementById("clearanceModal").style.display = "none";
                });
            }

            // Approve Offboarding
            const approveBtn = document.getElementById('approveBtn');
            console.log("Approve button exists:", !!approveBtn);
            
            if (approveBtn) {
                console.log("Adding click listener to approve button");
                approveBtn.addEventListener('click', function() {
                    const requestId = "<%= request.requestId %>";
                    console.log("Approve button clicked for request ID:", requestId);
                    
                    if (confirm('Are you sure you want to approve this offboarding request? This action cannot be undone.')) {
                        // Disable button to prevent double-clicking
                        approveBtn.disabled = true;
                        approveBtn.textContent = 'Processing...';
                        
                        console.log("Sending approval request to server");
                        fetch('/hr/approve-offboarding', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ requestId: requestId })
                        })
                        .then(response => {
                            console.log("Approval response status:", response.status);
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log("Approval response data:", data);
                            if (data.success) {
                                alert('Offboarding approved successfully!');
                                window.location.reload();
                            } else {
                                alert('Error: ' + (data.error || 'Failed to approve offboarding'));
                                approveBtn.disabled = false;
                                approveBtn.textContent = 'Approve Offboarding';
                            }
                        })
                        .catch(error => {
                            console.error('Error during approval:', error);
                            alert('An error occurred: ' + error.message);
                            approveBtn.disabled = false;
                            approveBtn.textContent = 'Approve Offboarding';
                        });
                    }
                });
            } else {
                console.error("Could not find approveBtn button");
            }

            // Save Clearance
            const saveClearanceBtn = document.getElementById("saveClearance");
            if (saveClearanceBtn) {
                saveClearanceBtn.addEventListener("click", function () {
                    const checklistItems = [];
                    document.querySelectorAll("#clearanceChecklist li").forEach((item) => {
                        const taskElement = item.querySelector("[data-task]");
                        const contactElement = item.querySelector("[data-contact]");
                        
                        if (taskElement && contactElement) {
                            const task = taskElement.textContent.trim();
                            const contactPerson = contactElement.textContent.replace("Contact: ", "").trim();
                            checklistItems.push({ task, contactPerson });
                        }
                    });
                    
                    console.log("Items to save:", checklistItems); 
                    
                    fetch("/save-clearance", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            requestId: "<%= request.requestId %>",
                            checklist: checklistItems
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        alert("Clearance saved successfully!");
                        document.getElementById("clearanceModal").style.display = "none";
                    })
                    .catch(error => console.error("Error saving clearance:", error));
                });
            }
        });

        // Toggle active class for sidebar links
        document.querySelectorAll('.sidebar ul li a').forEach(link => {
            link.addEventListener('click', function() {
                document.querySelectorAll('.sidebar ul li a').forEach(link => link.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Toggle collapsible content
        document.querySelectorAll('.collapsible-header').forEach(header => {
            header.addEventListener('click', function() {
                var content = this.nextElementSibling;
                if (content.style.display === 'block') {
                    content.style.display = 'none';
                } else {
                    // Hide all other collapsible contents
                    document.querySelectorAll('.collapsible-content').forEach(item => {
                        if (item !== content) {
                            item.style.display = 'none';
                        }
                    });
                    content.style.display = 'block';
                }
            });
        });

        // Add Item to Checklist
        function addChecklistItem() {
            const newTask = document.getElementById("newChecklistItem").value;
            const newContact = document.getElementById("newContactPerson").value;

            if (newTask.trim() === "" || newContact.trim() === "") {
                alert("Please enter both a task and a contact person.");
                return;
            }

            const checklist = document.getElementById("clearanceChecklist");
            const li = document.createElement("li");
            li.innerHTML = `
                <div class="checklist-item">
                    <span data-task>${newTask}</span>
                    <span class="contact-person" data-contact>Contact: ${newContact}</span>
                    <button class="delete-item" onclick="deleteChecklistItem(this)">✖</button>
                </div>
            `;
            checklist.appendChild(li);
            document.getElementById("newChecklistItem").value = "";
            document.getElementById("newContactPerson").value = "";
        }

        // Delete Item from Checklist
        function deleteChecklistItem(button) {
            const li = button.closest("li");
            li.remove();
        }
    </script>
</body>
</html>