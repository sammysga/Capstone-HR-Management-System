<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>

body {
    font-family: 'Inter', sans-serif; /* Set the font to Inter */
}
    .logout-container {
    margin-top: 370px; /* Push the logout button to the bottom */
    text-align: center; /* Center the button */
    margin-right: 35px;
}

.logout-button {
    text-decoration: none;
    color: #2385B0; /* Text color */
    font-weight: bold;
    background-color: #D8D8D8; /* Bootstrap's danger color for logout */
    padding: 15px 15px; /* Padding for button */
    border-radius: 5px; /* Rounded corners */
    display: block; /* Align as a block */
    transition: background-color 0.3s; /* Smooth hover effect */
    font-size: 16px; /* Font size */
    width: 100%;
}

.logout-button:hover {
    background-color: #2385B0; 
    color: #D8D8D8;
    font-weight: bold;
}

/* toast notification css */
/* .toast {
    position: fixed;
    top: 20px;
    right: 20px;
    background-color: #f9f9f9;
    border: 1px solid #ccc;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    padding: 16px;
    border-radius: 8px;
    display: none;
    z-index: 9999;
    animation: slide-in 0.5s ease-out;
    font-family: Arial, sans-serif;
}

.toast button {
    margin-top: 10px;
    background-color: #2385B0;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

.toast button:hover {
    background-color: #1a6a8b;
}

@keyframes slide-in {
    from {
        opacity: 0;
        transform: translateX(100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
} */

 /* Notification Bar Styling */
/* Notification Icon Styling */

body {
    font-family: 'Inter', sans-serif; /* Set the font to Inter */
}
.notification-icon {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1001;
        font-size: 36px; /* Increase the icon size */
        cursor: pointer;
        background-color: #07ACB9; /* Background color for the circle */
        color: white ; /* Icon color */
        border-radius: 50%; /* Make it circular */
        padding: 15px; /* Add padding to create space around the icon */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add shadow for floating effect */
        transition: background-color 0.3s, transform 0.3s; /* Smooth transition for hover effect */
    }

    .notification-icon:hover {
        background-color: #B4E3E3; /* Darker shade on hover */
        transform: scale(1.1); /* Slightly increase size on hover */
    }

    .notification-bar {
        position: fixed;
        top: 0;
        right: -100%;
        width: 300px;
        height: 100%; /* Allow height to adjust based on content */
        max-height: 80%; /* Limit the height */
        background-color: #fff;
        box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
        transition: right 0.3s ease;
        z-index: 1000;
        padding: 20px;
        overflow-y: auto;
    }

    .notification-bar.open {
        right: 0;
    }

    .notification-header {
    font-weight: bold;
    margin-bottom: 10px;
    font-size: 20px; /* Increase header font size */
    text-align: left; /* Align the header to the left */
    color: #07ACB9; /* Set the text color */
}

    .notification-section {
        margin-top: 20px; /* Space between sections */
        border-top: 1px solid #ccc; /* Divider line */
        padding-top: 10px; /* Padding for section */
    }
    .notification-item {
        margin-bottom: 10px;
        padding-bottom: 10px;
    }

    .notification-item strong {
        display: block; /* Make title block level */
        font-size: 16px; /* Title font size */
    }

    .notification-item p {
        margin: 5px 0; /* Add margin for paragraph */
    }


/* Floating Action Button Styling */
.fab {
        position: fixed;
        bottom: 20px; /* Position above the bottom */
        right: 20px; /* Align to the right */
        z-index: 1001;
        font-size: 24px; /* Icon size */
        cursor: pointer;
        background-color: #07ACB9; /* Background color for the circle */
        color: white; /* Icon color */
        border-radius: 50%; /* Make it circular */
        padding: 15px; /* Add padding to create space around the icon */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add shadow for floating effect */
        transition: background-color 0.3s, transform 0.3s; /* Smooth transition for hover effect */
    }

    .fab:hover {
        background-color: #B4E3E3; /* Darker shade on hover */
        transform: scale(1.1); /* Slightly increase size on hover */
    }


    /* Required Action Buton CSS */
    
    .toast-btn {
    background-color: #07ACB9 ; /* Set background color to red */
    color: white; /* Set text color to white */
    border: none; /* Remove default border */
    padding: 10px 15px; /* Add padding for better appearance */
    border-radius: 5px; /* Rounded corners */
    cursor: pointer; /* Change cursor to pointer */
    font-size: 14px; /* Font size */
    transition: background-color 0.3s; /* Smooth transition for hover effect */
}

.toast-btn:hover {
    background-color: #B4E3E3; /* Darker shade on hover */
}
</style>

<!-- <div id="toast-notification" class="toast">
    <strong>360 Feedback Answers Required</strong>
    <p>
        The 360-Degree Feedback process starts on <span id="startDate"></span> 
        and ends at <span id="endDate"></span>. Please submit your feedback before the end. 
        Your participation is required. Thank you.
    </p>
    <button id="feedback-button">Go to Staff Feedback List</button>
</div> -->

<div class="sidebar">
    <div class="logo-container">
        <img src="/images/prime_assets/primeinfra-logo-with-name.png" alt="Logo" class="logo">
    </div>
    <ul>
        <!-- Updated Recruitment Management to Staff Information -->
        <li class="collapsible">
            <a href="#" class="collapsible-header">Staff Information</a>
            <ul class="collapsible-content">
                <li><a href="/employee/useracc">User Account Information</a></li>
                <li><a href="/employee/employeepersinfocareerprog">Personal Information & Career Progression</a></li>
            </ul>
        </li>
        <!-- Updated Performance Management to Attendance Request -->
        <li class="collapsible">
            <a href="#" class="collapsible-header">Attendance and Requests</a>
            <ul class="collapsible-content">
                <li><a href="/employee/attendance">Attendance</a></li>
                <li><a href="/employee/leaverequest">Leave Requests</a></li>
            </ul>
        </li>
        <li class="collapsible">
            <a href="#" class="collapsible-header">Staff Performance Goals</a>
            <ul class="collapsible-content">
                <li><a href="/employee/employeeobjectivebasedprog">Objective-based Progress Overview</a></li>
                <li><a href="/employee/employeeskillsproggapanal">Skills Progress & Gap Analysis Overview</a></li>
                <li><a href="/employee/viewtimeline">View Performance Review Timeline</a></li>

            </ul>
        </li>
        <!-- Uncommented section for Employee Management, if needed -->
        <!-- <li class="collapsible">
            <a href="#" class="collapsible-header">Employee Management</a>
            <ul class="collapsible-content">
                <li><a href="/hr/managestaff">Manage Employee Accounts</a></li>
            </ul>
        </li> -->
    </ul>

    <div class="logout-container">
        <a href="/logout" class="logout-button">Logout</a>
    </div>
</div>


<i class="fas fa-bell notification-icon" id="notification-icon"></i>

<div class="notification-bar" id="notification-bar">
    <div class="notification-header">Notifications</div> <!-- Added Notifications heading -->
    <div class="notification-list" id="notification-list">
        <div class="notification-section" id="section-1">
            <h4>REQUIRED 360 Degree Feedback Submission</h4>
            <!-- Notifications will be added here -->
        </div>
        <div class="notification-section" id="section-2">
            <h4>Section 2</h4>
            <!-- Notifications will be added here -->
        </div>
    </div>
</div>

<!-- Floating Action Button -->
<div class="fab" id="fab">
    <i class="fas fa-arrow-right"></i>
</div>

<script>
    const notificationIcon = document.getElementById('notification-icon');
    const notificationBar = document.getElementById('notification-bar');
    const fab = document.getElementById('fab');

    notificationIcon.addEventListener('click', () => {
        console.log('Notification icon clicked'); // Log when clicked
        notificationBar.classList.toggle('open');
    });

    fab.addEventListener('click', () => {
        console.log('Floating Action Button clicked'); // Log when clicked
        window.location.href = '/employee/staffFeedbackList'; // Redirect to the Staff Feedback List
    });

    // Function to add a new notification
// Function to add a new notification
function addNotification(title, message, startDate, endDate) {
    console.log('Adding notification:', { title, message, startDate, endDate }); // Log notification details
    const notificationItem = document.createElement('div');
    notificationItem.classList.add('notification-item');
    notificationItem.innerHTML = `
        <strong>${title}</strong>
        <p>${message} from <span>${startDate}</span> to <span>${endDate}</span>.</p>
        <button class="toast-btn" id="toast-action-btn">Required Action</button>`;
    document.getElementById('section-1').appendChild(notificationItem); // Append to section 1
    console.log('Notification added to the list.'); // Confirm notification was added
}
    // Example of how to call the addNotification function
    async function fetchNotifications() {
        try {
            const response = await fetch('/employee/api/get360FeedbackNotification'); // Adjust the path to your API
            const data = await response.json();

            console.log('API Response:', data); // Log the response

            if (data.success) {
                const { feedback, startDate, endDate } = data;
                console.log('Notification data:', { feedback, startDate, endDate }); // Log the data to be used
                addNotification('360 Feedback Answers Required', 'Your participation is required.', startDate, endDate);
            } else {
                console.error('Error in response:', data.message);
            }
        } catch (error) {
            console.error('Error fetching notifications:', error);
        }
    }

    // Call fetchNotifications when the page loads or at a specific interval
    window.onload = fetchNotifications; // Fetch notifications on page load
</script>

<!-- 
<script>
    const notificationIcon = document.getElementById('notification-icon');
    const notificationBar = document.getElementById('notification-bar');

    notificationIcon.addEventListener('click', () => {
        notificationBar.classList.toggle('open');
    });
</script> -->

