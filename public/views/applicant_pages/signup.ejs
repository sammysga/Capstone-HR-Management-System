<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
    <link rel="stylesheet" href="/css/signup.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background-image: url('/images/prime_assets/banner-IR-1536x741.jpg');
            background-size: cover;
            background-position: center;
            font-family: Arial, sans-serif;
        }
        
        .signup-container {
            background-color: white;
            padding: 20px;
            width: 350px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        
        .signup-container img {
            width: 80px;
            margin-bottom: 10px;
        }
        
        .signup-container h2 {
            margin-bottom: 20px;
            color: #07ACB9;
        }
        
        .signup-container input[type="text"],
        .signup-container input[type="email"],
        .signup-container input[type="password"],
        .signup-container input[type="date"],
        .signup-container input[type="tel"] {
            width: 100%;
            padding: 12px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        .signup-container .form-row {
            display: flex;
            justify-content: space-between;
        }
        
        .signup-container .form-row input[type="text"] {
            width: 48%;
        }
        
        .signup-container button {
            width: 100%;
            padding: 12px;
            background-color: #124A5C;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
            margin-top: 10px;
        }
        
        .signup-container button:hover {
            background-color: #0056b3;
        }
        
        .signup-container .login-link {
            margin-top: 15px;
            font-size: 0.9em;
        }
        
        .error-message {
            color: #ff0000;
            font-size: 0.8em;
            text-align: left;
            margin-top: -5px;
            margin-bottom: 5px;
        }

        .success-message {
            color: #28a745;
            font-size: 0.8em;
            text-align: left;
            margin-top: -5px;
            margin-bottom: 5px;
        }

        .email-input-container {
            position: relative;
        }

        .email-status {
            font-size: 0.8em;
            margin-top: -5px;
            margin-bottom: 5px;
            text-align: left;
        }

        .email-checking {
            color: #007bff;
        }

        .email-available {
            color: #28a745;
        }

        .email-taken {
            color: #dc3545;
        }

        .email-invalid {
            color: #ffc107;
        }

        input.email-valid {
            border-color: #28a745;
        }

        input.email-invalid {
            border-color: #dc3545;
        }

        button:disabled {
            background-color: #6c757d;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    
    <div class="signup-container">
        <img src="/images/prime_assets/company-logo-text.png" alt="Company Logo" style="width: 100px;">
        <h2>Create an Applicant Account</h2>
        <form action="/applicant/signup" method="POST" id="signupForm">
            <input type="text" name="lastName" placeholder="Last Name" required>
            <input type="text" name="firstName" placeholder="First Name" required>
            <input type="text" name="middleInitial" placeholder="M.I." maxlength="1" required>
            <input type="date" name="birthDate" placeholder="Birthdate" required>
            <input type="tel" name="phoneNo" placeholder="Phone Number" required>
            
            <div class="email-input-container">
                <input type="email" name="email" id="emailInput" placeholder="Email Address" required>
                <div id="emailStatus" class="email-status"></div>
            </div>
            
            <input type="password" name="password" id="password" placeholder="Set Password" required>
            <input type="password" name="confirmPassword" id="confirmpassword" placeholder="Confirm Password" required>
            
            <% if (locals.errors) { %>
                <% Object.keys(errors).forEach(function(key) { %>
                    <div class="error-message"><%= errors[key] %></div>
                <% }); %>
            <% } %>
            
            <button type="submit" id="submitBtn">Sign Up</button>
        </form>
        <div class="login-link">
            Already have an account? <a href="/applicant/login">Login here</a>
        </div>
    </div>

    <script>
        let emailCheckTimeout;
        let isEmailValid = false;

        const emailInput = document.getElementById('emailInput');
        const emailStatus = document.getElementById('emailStatus');
        const submitBtn = document.getElementById('submitBtn');
        const signupForm = document.getElementById('signupForm');

        // Email validation function
        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        // Update submit button state
        function updateSubmitButton() {
            if (isEmailValid && emailInput.value.trim() !== '') {
                submitBtn.disabled = false;
            } else {
                submitBtn.disabled = true;
            }
        }

        // Check email availability
        async function checkEmailAvailability(email) {
            try {
                const response = await fetch('/applicant/signup/checkemail', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: email })
                });

                const result = await response.json();
                
                if (response.ok) {
                    if (!result.valid) {
                        emailStatus.textContent = result.message;
                        emailStatus.className = 'email-status email-invalid';
                        emailInput.className = 'email-invalid';
                        isEmailValid = false;
                    } else if (result.exists) {
                        emailStatus.textContent = 'Email is already registered';
                        emailStatus.className = 'email-status email-taken';
                        emailInput.className = 'email-invalid';
                        isEmailValid = false;
                    } else {
                        emailStatus.textContent = 'Email is available âœ“';
                        emailStatus.className = 'email-status email-available';
                        emailInput.className = 'email-valid';
                        isEmailValid = true;
                    }
                } else {
                    emailStatus.textContent = 'Error checking email';
                    emailStatus.className = 'email-status email-invalid';
                    emailInput.className = '';
                    isEmailValid = false;
                }
            } catch (error) {
                console.error('Error checking email:', error);
                emailStatus.textContent = 'Error checking email';
                emailStatus.className = 'email-status email-invalid';
                emailInput.className = '';
                isEmailValid = false;
            }
            
            updateSubmitButton();
        }

        // Email input event listener
        emailInput.addEventListener('input', function() {
            const email = this.value.trim();
            
            // Clear previous timeout
            clearTimeout(emailCheckTimeout);
            
            // Reset status
            emailStatus.textContent = '';
            emailStatus.className = 'email-status';
            this.className = '';
            isEmailValid = false;
            updateSubmitButton();
            
            if (email === '') {
                return;
            }
            
            // Basic email format check
            if (!isValidEmail(email)) {
                emailStatus.textContent = 'Invalid email format';
                emailStatus.className = 'email-status email-invalid';
                this.className = 'email-invalid';
                return;
            }
            
            // Show checking status
            emailStatus.textContent = 'Checking availability...';
            emailStatus.className = 'email-status email-checking';
            
            // Debounce API call (wait 500ms after user stops typing)
            emailCheckTimeout = setTimeout(() => {
                checkEmailAvailability(email);
            }, 500);
        });

        // Form submission handler
        signupForm.addEventListener('submit', function(e) {
            if (!isEmailValid) {
                e.preventDefault();
                alert('Please enter a valid and available email address.');
                return false;
            }
        });

        // Initialize button state
        updateSubmitButton();
    </script>
    
</body>
</html>