<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .chat-container {
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        .chat-header {
            background-color: #007BFF;
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 1.5em;
        }
        .chat-messages {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background-color: #f8f9fa;
            display: flex;
            flex-direction: column;
        }
        .message {
            max-width: 70%;
            padding: 10px;
            margin: 5px 0;
            border-radius: 10px;
            position: relative;
        }
        .user-message {
            background-color: white;
            align-self: flex-end;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .bot-message {
            background-color: #007BFF;
            color: white;
            align-self: flex-start;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .chat-input {
            display: flex;
            border-top: 1px solid #ccc;
            padding: 10px;
        }
        .chat-input input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px 0 0 5px;
        }
        .chat-input button {
            padding: 10px;
            border: none;
            background-color: #007BFF;
            color: white;
            cursor: pointer;
            border-radius: 0 5px 5px 0;
        }
        .job-button {
            margin: 5px 0;
            background-color: #e0e0e0;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">Chatbot</div>
        <div class="chat-messages" id="chat-messages"></div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Type your message..." />
            <button id="send-button">Send</button>
        </div>
    </div>

    <script>
        document.getElementById('send-button').addEventListener('click', () => {
            const inputField = document.getElementById('user-input');
            const userInput = inputField.value.trim();
            console.log('User input:', userInput);
            if (userInput) {
                addMessage('You', userInput);
                inputField.value = '';
                sendMessage(userInput);
            } else {
                console.log('Input is empty.');
            }
        });

        async function sendMessage(message) {
            console.log('Sending message:', message);
            try {
                const response = await fetch('/chatbot', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message }),
                });

                if (!response.ok) throw new Error("Failed to send message");

                const data = await response.json();
                displayBotResponse(data.response);
            } catch (error) {
                console.error("Error sending message:", error);
                addMessage("Bot", "There was an error sending your message. Please try again later.");
            }
        }

        function addMessage(sender, message) {
            const chatMessages = document.getElementById('chat-messages');
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('message', sender === 'You' ? 'user-message' : 'bot-message');
            messageDiv.textContent = message;
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function displayInitialMessage(initialResponse) {
            const chatMessages = document.getElementById('chat-messages');
            const responseLines = initialResponse.split('\n');

            responseLines.forEach(line => {
                if (line.startsWith('-')) {
                    const button = document.createElement('button');
                    button.innerText = line.slice(2);
                    button.onclick = () => {
                        addMessage('You', button.innerText);
                        sendMessage(button.innerText);
                    }; 
                    button.classList.add('job-button');
                    chatMessages.appendChild(button);
                } else {
                    const textNode = document.createElement('div');
                    textNode.classList.add('message', 'bot-message');
                    textNode.innerText = line;
                    chatMessages.appendChild(textNode);
                }
            });
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function displayBotResponse(response) {
            const chatMessages = document.getElementById('chat-messages');
            const responseLines = response.split('\n');

            responseLines.forEach(line => {
                if (line.startsWith('-')) {
                    const button = document.createElement('button');
                    button.innerText = line.slice(2);
                    button.onclick = () => {
                        addMessage('You', button.innerText);
                        sendMessage(button.innerText);
                    };
                    button.classList.add('job-button');
                    chatMessages.appendChild(button);
                } else {
                    const messageDiv = document.createElement('div');
                    messageDiv.classList.add('message', 'bot-message');
                    messageDiv.innerHTML = line;
                    chatMessages.appendChild(messageDiv);
                }
            });

            // Add prompt for rating
            if (response.includes("Please rate each question from 1 to 5")) {
                const ratingInputDiv = document.createElement('div');
                ratingInputDiv.classList.add('message', 'bot-message');
                ratingInputDiv.innerHTML = "Please rate your answers from 1 to 5:";
                chatMessages.appendChild(ratingInputDiv);

                for (let i = 1; i <= 5; i++) {
                    const button = document.createElement('button');
                    button.innerText = i; 
                    button.onclick = () => {
                        addMessage('You', button.innerText);
                        sendMessage(button.innerText); 
                    };
                    button.classList.add('job-button');
                    chatMessages.appendChild(button);
                }
            }

            chatMessages.scrollTop = chatMessages.scrollHeight; // Scroll to the bottom
        }

        document.addEventListener("DOMContentLoaded", function() {
            const initialResponse = "<%= initialResponse %>";
            displayInitialMessage(initialResponse);
            console.log('Initial response being displayed:', initialResponse);
        });
    </script>
</body>
</html>
